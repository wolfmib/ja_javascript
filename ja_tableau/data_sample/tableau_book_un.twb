<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1211.1636                               -->
<workbook original-version='18.1' source-build='2019.4.1 (20194.19.1211.1636)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='PRECIP_HLY_sample_csv' inline='true' name='federated.01i72by0ooazeq13hbuep1i2ko64' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='PRECIP_HLY_sample_csv' name='textscan.1jat3zc14mgm9y15kl0px1qo1cdu'>
            <connection class='textscan' directory='/Users/johnny_hung/reference_work/ja_javascript/ja_tableau/data_sample' filename='PRECIP_HLY_sample_csv.csv' password='' port='0' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1jat3zc14mgm9y15kl0px1qo1cdu' name='PRECIP_HLY_sample_csv.csv' table='[PRECIP_HLY_sample_csv#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='STATION' ordinal='0' />
            <column datatype='string' name='STATION_NAME' ordinal='1' />
            <column datatype='real' name='ELEVATION' ordinal='2' />
            <column datatype='real' name='LATITUDE' ordinal='3' />
            <column datatype='real' name='LONGITUDE' ordinal='4' />
            <column datatype='string' name='DATE' ordinal='5' />
            <column datatype='integer' name='HPCP' ordinal='6' />
            <column datatype='string' name='Measurement Flag' ordinal='7' />
            <column datatype='string' name='Quality Flag' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[PRECIP_HLY_sample_csv.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATION</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATION]</local-name>
            <parent-name>[PRECIP_HLY_sample_csv.csv]</parent-name>
            <remote-alias>STATION</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATION_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATION_NAME]</local-name>
            <parent-name>[PRECIP_HLY_sample_csv.csv]</parent-name>
            <remote-alias>STATION_NAME</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ELEVATION</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ELEVATION]</local-name>
            <parent-name>[PRECIP_HLY_sample_csv.csv]</parent-name>
            <remote-alias>ELEVATION</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LATITUDE]</local-name>
            <parent-name>[PRECIP_HLY_sample_csv.csv]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LONGITUDE]</local-name>
            <parent-name>[PRECIP_HLY_sample_csv.csv]</parent-name>
            <remote-alias>LONGITUDE</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DATE]</local-name>
            <parent-name>[PRECIP_HLY_sample_csv.csv]</parent-name>
            <remote-alias>DATE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HPCP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HPCP]</local-name>
            <parent-name>[PRECIP_HLY_sample_csv.csv]</parent-name>
            <remote-alias>HPCP</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measurement Flag</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Measurement Flag]</local-name>
            <parent-name>[PRECIP_HLY_sample_csv.csv]</parent-name>
            <remote-alias>Measurement Flag</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quality Flag</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Quality Flag]</local-name>
            <parent-name>[PRECIP_HLY_sample_csv.csv]</parent-name>
            <remote-alias>Quality Flag</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Date' datatype='string' name='[DATE]' role='dimension' type='nominal' />
      <column caption='Elevation' datatype='real' name='[ELEVATION]' role='measure' type='quantitative' />
      <column caption='Hpcp' datatype='integer' name='[HPCP]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Station' datatype='string' name='[STATION]' role='dimension' type='nominal' />
      <column caption='Station Name' datatype='string' name='[STATION_NAME]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.50068' measure-ordering='alphabetic' measure-percentage='0.49932' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='users+' inline='true' name='federated.1qyk95w18gs54n17aliq00m8aevj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='users' name='textscan.05jc1nb022130016458ro0vni5so'>
            <connection class='textscan' directory='/Users/johnny_hung/reference_work/ja_javascript/ja_tableau/data_sample' filename='users.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[users.csv].[F7]' />
              <expression op='[orders.csv].[F7]' />
            </expression>
          </clause>
          <relation connection='textscan.05jc1nb022130016458ro0vni5so' name='users.csv' table='[users#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Userid' ordinal='0' />
              <column datatype='date' name='register_time' ordinal='1' />
              <column datatype='string' name='country' ordinal='2' />
              <column datatype='string' name='F4' ordinal='3' />
              <column datatype='string' name='F5' ordinal='4' />
              <column datatype='string' name='F6' ordinal='5' />
              <column datatype='string' name='F7' ordinal='6' />
            </columns>
          </relation>
          <relation connection='textscan.05jc1nb022130016458ro0vni5so' name='orders.csv' table='[orders#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='orderid:' ordinal='7' />
              <column datatype='integer' name='userid:' ordinal='8' />
              <column datatype='integer' name='itemid:' ordinal='9' />
              <column datatype='real' name='gmv:' ordinal='10' />
              <column datatype='date' name='order_time:' ordinal='11' />
              <column datatype='string' name='Country ' ordinal='12' />
              <column datatype='string' name='F7' ordinal='13' />
              <column datatype='string' name='F8' ordinal='14' />
              <column datatype='string' name='F9' ordinal='15' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Country ]' value='[orders.csv].[Country ]' />
          <map key='[F4]' value='[users.csv].[F4]' />
          <map key='[F5]' value='[users.csv].[F5]' />
          <map key='[F6]' value='[users.csv].[F6]' />
          <map key='[F7 (orders.csv)]' value='[orders.csv].[F7]' />
          <map key='[F7]' value='[users.csv].[F7]' />
          <map key='[F8]' value='[orders.csv].[F8]' />
          <map key='[F9]' value='[orders.csv].[F9]' />
          <map key='[Userid]' value='[users.csv].[Userid]' />
          <map key='[country]' value='[users.csv].[country]' />
          <map key='[gmv:]' value='[orders.csv].[gmv:]' />
          <map key='[itemid:]' value='[orders.csv].[itemid:]' />
          <map key='[order_time:]' value='[orders.csv].[order_time:]' />
          <map key='[orderid:]' value='[orders.csv].[orderid:]' />
          <map key='[register_time]' value='[users.csv].[register_time]' />
          <map key='[userid:]' value='[orders.csv].[userid:]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[users.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Userid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Userid]</local-name>
            <parent-name>[users.csv]</parent-name>
            <remote-alias>Userid</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>register_time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[register_time]</local-name>
            <parent-name>[users.csv]</parent-name>
            <remote-alias>register_time</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[users.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[users.csv]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F5</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F5]</local-name>
            <parent-name>[users.csv]</parent-name>
            <remote-alias>F5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F6</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F6]</local-name>
            <parent-name>[users.csv]</parent-name>
            <remote-alias>F6</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F7</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F7]</local-name>
            <parent-name>[users.csv]</parent-name>
            <remote-alias>F7</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>orderid:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[orderid:]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>orderid:</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>userid:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[userid:]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>userid:</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>itemid:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[itemid:]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>itemid:</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gmv:</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gmv:]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>gmv:</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_time:</remote-name>
            <remote-type>133</remote-type>
            <local-name>[order_time:]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>order_time:</remote-alias>
            <ordinal>11</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country </remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country ]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>Country </remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F7</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F7 (orders.csv)]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>F7</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F8</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F8]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>F8</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F9</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F9]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>F9</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country1' datatype='string' name='[Country ]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Gmv:' datatype='real' name='[gmv:]' role='measure' type='quantitative' />
      <column caption='Itemid:' datatype='integer' name='[itemid:]' role='measure' type='quantitative' />
      <column caption='Order Time:' datatype='date' name='[order_time:]' role='dimension' type='ordinal' />
      <column caption='Orderid:' datatype='integer' name='[orderid:]' role='measure' type='quantitative' />
      <column caption='Register Time' datatype='date' name='[register_time]' role='dimension' type='ordinal' />
      <column caption='Userid:' datatype='integer' name='[userid:]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.544818' measure-ordering='alphabetic' measure-percentage='0.455182' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='orders' inline='true' name='federated.0mf0kyy1p2qkq213gkrbl1sbyyk1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='orders' name='textscan.0970oka1w1bcp71asn3p21o3t2hw'>
            <connection class='textscan' directory='/Users/johnny_hung/reference_work/ja_javascript/ja_tableau/data_sample' filename='orders.csv' password='' server='' />
          </named-connection>
        </named-connections>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.500688' measure-ordering='alphabetic' measure-percentage='0.499312' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='order_tab+ (SQL_Test)' inline='true' name='federated.07u5vh41wjavzq10lmfst19k74nb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SQL_Test' name='excel-direct.1iuxcie1w6tef1136xrbw0674caj'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/johnny_hung/reference_work/ja_javascript/ja_tableau/data_sample/SQL_Test.xlsx' interpretationMode='0' password='' port='0' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='full' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[order_tab].[userid:]' />
              <expression op='[user_tab].[userid:]' />
            </expression>
          </clause>
          <relation connection='excel-direct.1iuxcie1w6tef1136xrbw0674caj' name='order_tab' table='[order_tab$]' type='table'>
            <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='orderid:' ordinal='0' />
              <column datatype='integer' name='userid:' ordinal='1' />
              <column datatype='integer' name='itemid:' ordinal='2' />
              <column datatype='integer' name='gmv:' ordinal='3' />
              <column datatype='date' name='order_time:' ordinal='4' />
            </columns>
          </relation>
          <relation connection='excel-direct.1iuxcie1w6tef1136xrbw0674caj' name='user_tab' table='[user_tab$]' type='table'>
            <columns gridOrigin='A1:C10001:no:A1:C10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='userid:' ordinal='5' />
              <column datatype='date' name='register_time:' ordinal='6' />
              <column datatype='string' name='country:' ordinal='7' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[country:]' value='[user_tab].[country:]' />
          <map key='[gmv:]' value='[order_tab].[gmv:]' />
          <map key='[itemid:]' value='[order_tab].[itemid:]' />
          <map key='[order_time:]' value='[order_tab].[order_time:]' />
          <map key='[orderid:]' value='[order_tab].[orderid:]' />
          <map key='[register_time:]' value='[user_tab].[register_time:]' />
          <map key='[userid: (user!tab)]' value='[user_tab].[userid:]' />
          <map key='[userid:]' value='[order_tab].[userid:]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>orderid:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[orderid:]</local-name>
            <parent-name>[order_tab]</parent-name>
            <remote-alias>orderid:</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>userid:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[userid:]</local-name>
            <parent-name>[order_tab]</parent-name>
            <remote-alias>userid:</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>itemid:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[itemid:]</local-name>
            <parent-name>[order_tab]</parent-name>
            <remote-alias>itemid:</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gmv:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gmv:]</local-name>
            <parent-name>[order_tab]</parent-name>
            <remote-alias>gmv:</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_time:</remote-name>
            <remote-type>7</remote-type>
            <local-name>[order_time:]</local-name>
            <parent-name>[order_tab]</parent-name>
            <remote-alias>order_time:</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[order_tab]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>userid:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[userid: (user!tab)]</local-name>
            <parent-name>[user_tab]</parent-name>
            <remote-alias>userid:</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>register_time:</remote-name>
            <remote-type>7</remote-type>
            <local-name>[register_time:]</local-name>
            <parent-name>[user_tab]</parent-name>
            <remote-alias>register_time:</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country:</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country:]</local-name>
            <parent-name>[user_tab]</parent-name>
            <remote-alias>country:</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[user_tab]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C10001:no:A1:C10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' caption='Country:' datatype='string' name='[country:]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Gmv:' datatype='integer' name='[gmv:]' role='measure' type='quantitative' />
      <column caption='Itemid:' datatype='integer' name='[itemid:]' role='measure' type='quantitative' />
      <column caption='Order Time:' datatype='date' name='[order_time:]' role='dimension' type='ordinal' />
      <column caption='Orderid:' datatype='integer' name='[orderid:]' role='measure' type='quantitative' />
      <column caption='Register Time:' datatype='date' name='[register_time:]' role='dimension' type='ordinal' />
      <column caption='Userid: (User!Tab)' datatype='integer' name='[userid: (user!tab)]' role='measure' type='quantitative' />
      <column caption='Userid:' datatype='integer' name='[userid:]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.414791' measure-ordering='alphabetic' measure-percentage='0.585209' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='jason_order_tab+ (jason_sample)' inline='true' name='federated.06b3mmr0muoasu1cusxad1mbt65x' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='jason_sample' name='excel-direct.1kf20df0cx17u81c6xwrf1yzce96'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/johnny_hung/reference_work/ja_javascript/ja_tableau/data_sample/jason_sample.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[jason_user_tab].[userid:]' />
              <expression op='[jason_order_tab].[userid:]' />
            </expression>
          </clause>
          <relation connection='excel-direct.1kf20df0cx17u81c6xwrf1yzce96' name='jason_user_tab' table='[jason_user_tab$]' type='table'>
            <columns gridOrigin='A1:C10001:no:A1:C10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='userid:' ordinal='0' />
              <column datatype='date' name='register_time:' ordinal='1' />
              <column datatype='string' name='country:' ordinal='2' />
            </columns>
          </relation>
          <relation connection='excel-direct.1kf20df0cx17u81c6xwrf1yzce96' name='jason_order_tab' table='[jason_order_tab$]' type='table'>
            <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='orderid:' ordinal='3' />
              <column datatype='integer' name='userid:' ordinal='4' />
              <column datatype='integer' name='itemid:' ordinal='5' />
              <column datatype='integer' name='gmv:' ordinal='6' />
              <column datatype='date' name='order_time:' ordinal='7' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[country:]' value='[jason_user_tab].[country:]' />
          <map key='[gmv:]' value='[jason_order_tab].[gmv:]' />
          <map key='[itemid:]' value='[jason_order_tab].[itemid:]' />
          <map key='[order_time:]' value='[jason_order_tab].[order_time:]' />
          <map key='[orderid:]' value='[jason_order_tab].[orderid:]' />
          <map key='[register_time:]' value='[jason_user_tab].[register_time:]' />
          <map key='[userid: (jason!order!tab)]' value='[jason_order_tab].[userid:]' />
          <map key='[userid:]' value='[jason_user_tab].[userid:]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>userid:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[userid:]</local-name>
            <parent-name>[jason_user_tab]</parent-name>
            <remote-alias>userid:</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>register_time:</remote-name>
            <remote-type>7</remote-type>
            <local-name>[register_time:]</local-name>
            <parent-name>[jason_user_tab]</parent-name>
            <remote-alias>register_time:</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country:</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country:]</local-name>
            <parent-name>[jason_user_tab]</parent-name>
            <remote-alias>country:</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[jason_user_tab]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C10001:no:A1:C10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>orderid:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[orderid:]</local-name>
            <parent-name>[jason_order_tab]</parent-name>
            <remote-alias>orderid:</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>userid:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[userid: (jason!order!tab)]</local-name>
            <parent-name>[jason_order_tab]</parent-name>
            <remote-alias>userid:</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>itemid:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[itemid:]</local-name>
            <parent-name>[jason_order_tab]</parent-name>
            <remote-alias>itemid:</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gmv:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gmv:]</local-name>
            <parent-name>[jason_order_tab]</parent-name>
            <remote-alias>gmv:</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_time:</remote-name>
            <remote-type>7</remote-type>
            <local-name>[order_time:]</local-name>
            <parent-name>[jason_order_tab]</parent-name>
            <remote-alias>order_time:</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[jason_order_tab]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' caption='Country:' datatype='string' name='[country:]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Gmv:' datatype='integer' name='[gmv:]' role='measure' type='quantitative' />
      <column caption='Itemid:' datatype='integer' name='[itemid:]' role='measure' type='quantitative' />
      <column caption='Order Time:' datatype='date' name='[order_time:]' role='dimension' type='ordinal' />
      <column caption='Orderid:' datatype='integer' name='[orderid:]' role='measure' type='quantitative' />
      <column caption='Register Time:' datatype='date' name='[register_time:]' role='dimension' type='ordinal' />
      <column caption='Userid: (Jason!Order!Tab)' datatype='integer' name='[userid: (jason!order!tab)]' role='measure' type='quantitative' />
      <column caption='Userid:' datatype='integer' name='[userid:]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.423358' measure-ordering='alphabetic' measure-percentage='0.576642' rowDisplayCount='1000' show-aliased-fields='true' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='jason_order_tab+ (jason_sample) (2)' inline='true' name='federated.1up5a0q1u2f3yl123q52d1ro7uqi' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='jason_sample' name='excel-direct.1l2m4nh0t5ygnb18zf73n0qypw9z'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/johnny_hung/reference_work/ja_javascript/ja_tableau/data_sample/jason_sample.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='full' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[jason_order_tab].[userid:]' />
              <expression op='[jason_user_tab].[userid:]' />
            </expression>
          </clause>
          <relation connection='excel-direct.1l2m4nh0t5ygnb18zf73n0qypw9z' name='jason_order_tab' table='[jason_order_tab$]' type='table'>
            <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='orderid:' ordinal='0' />
              <column datatype='integer' name='userid:' ordinal='1' />
              <column datatype='integer' name='itemid:' ordinal='2' />
              <column datatype='integer' name='gmv:' ordinal='3' />
              <column datatype='date' name='order_time:' ordinal='4' />
            </columns>
          </relation>
          <relation connection='excel-direct.1l2m4nh0t5ygnb18zf73n0qypw9z' name='jason_user_tab' table='[jason_user_tab$]' type='table'>
            <columns gridOrigin='A1:C10001:no:A1:C10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='userid:' ordinal='5' />
              <column datatype='date' name='register_time:' ordinal='6' />
              <column datatype='string' name='country:' ordinal='7' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[country:]' value='[jason_user_tab].[country:]' />
          <map key='[gmv:]' value='[jason_order_tab].[gmv:]' />
          <map key='[itemid:]' value='[jason_order_tab].[itemid:]' />
          <map key='[order_time:]' value='[jason_order_tab].[order_time:]' />
          <map key='[orderid:]' value='[jason_order_tab].[orderid:]' />
          <map key='[register_time:]' value='[jason_user_tab].[register_time:]' />
          <map key='[userid: (jason!user!tab)]' value='[jason_user_tab].[userid:]' />
          <map key='[userid:]' value='[jason_order_tab].[userid:]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>orderid:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[orderid:]</local-name>
            <parent-name>[jason_order_tab]</parent-name>
            <remote-alias>orderid:</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>userid:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[userid:]</local-name>
            <parent-name>[jason_order_tab]</parent-name>
            <remote-alias>userid:</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>itemid:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[itemid:]</local-name>
            <parent-name>[jason_order_tab]</parent-name>
            <remote-alias>itemid:</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gmv:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gmv:]</local-name>
            <parent-name>[jason_order_tab]</parent-name>
            <remote-alias>gmv:</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_time:</remote-name>
            <remote-type>7</remote-type>
            <local-name>[order_time:]</local-name>
            <parent-name>[jason_order_tab]</parent-name>
            <remote-alias>order_time:</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[jason_order_tab]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>userid:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[userid: (jason!user!tab)]</local-name>
            <parent-name>[jason_user_tab]</parent-name>
            <remote-alias>userid:</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>register_time:</remote-name>
            <remote-type>7</remote-type>
            <local-name>[register_time:]</local-name>
            <parent-name>[jason_user_tab]</parent-name>
            <remote-alias>register_time:</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country:</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country:]</local-name>
            <parent-name>[jason_user_tab]</parent-name>
            <remote-alias>country:</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[jason_user_tab]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C10001:no:A1:C10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' caption='Country:' datatype='string' name='[country:]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Gmv:' datatype='integer' name='[gmv:]' role='measure' type='quantitative' />
      <column caption='Itemid:' datatype='integer' name='[itemid:]' role='measure' type='quantitative' />
      <column caption='Order Time:' datatype='date' name='[order_time:]' role='dimension' type='ordinal' />
      <column caption='Orderid:' datatype='integer' name='[orderid:]' role='measure' type='quantitative' />
      <column caption='Register Time:' datatype='date' name='[register_time:]' role='dimension' type='ordinal' />
      <column caption='Userid: (Jason!User!Tab)' datatype='integer' name='[userid: (jason!user!tab)]' role='measure' type='quantitative' />
      <column caption='Userid:' datatype='integer' name='[userid:]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.420181' measure-ordering='alphabetic' measure-percentage='0.579819' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='jason_order_tab+ (jason_sample) (3)' inline='true' name='federated.14emif20bjo8t018lby1x0cp36zw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='jason_sample' name='excel-direct.06whzsc0t4o5fq13rci8g0ploon8'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/johnny_hung/reference_work/ja_javascript/ja_tableau/data_sample/jason_sample.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='full' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[jason_order_tab].[userid:]' />
              <expression op='[jason_user_tab].[userid:]' />
            </expression>
          </clause>
          <relation connection='excel-direct.06whzsc0t4o5fq13rci8g0ploon8' name='jason_order_tab' table='[jason_order_tab$]' type='table'>
            <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='orderid:' ordinal='0' />
              <column datatype='integer' name='userid:' ordinal='1' />
              <column datatype='integer' name='itemid:' ordinal='2' />
              <column datatype='integer' name='gmv:' ordinal='3' />
              <column datatype='date' name='order_time:' ordinal='4' />
            </columns>
          </relation>
          <relation connection='excel-direct.06whzsc0t4o5fq13rci8g0ploon8' name='jason_user_tab' table='[jason_user_tab$]' type='table'>
            <columns gridOrigin='A1:C10001:no:A1:C10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='userid:' ordinal='5' />
              <column datatype='date' name='register_time:' ordinal='6' />
              <column datatype='string' name='country:' ordinal='7' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[country:]' value='[jason_user_tab].[country:]' />
          <map key='[gmv:]' value='[jason_order_tab].[gmv:]' />
          <map key='[itemid:]' value='[jason_order_tab].[itemid:]' />
          <map key='[order_time:]' value='[jason_order_tab].[order_time:]' />
          <map key='[orderid:]' value='[jason_order_tab].[orderid:]' />
          <map key='[register_time:]' value='[jason_user_tab].[register_time:]' />
          <map key='[userid: (jason!user!tab)]' value='[jason_user_tab].[userid:]' />
          <map key='[userid:]' value='[jason_order_tab].[userid:]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>orderid:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[orderid:]</local-name>
            <parent-name>[jason_order_tab]</parent-name>
            <remote-alias>orderid:</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>userid:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[userid:]</local-name>
            <parent-name>[jason_order_tab]</parent-name>
            <remote-alias>userid:</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>itemid:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[itemid:]</local-name>
            <parent-name>[jason_order_tab]</parent-name>
            <remote-alias>itemid:</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gmv:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gmv:]</local-name>
            <parent-name>[jason_order_tab]</parent-name>
            <remote-alias>gmv:</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_time:</remote-name>
            <remote-type>7</remote-type>
            <local-name>[order_time:]</local-name>
            <parent-name>[jason_order_tab]</parent-name>
            <remote-alias>order_time:</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[jason_order_tab]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>userid:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[userid: (jason!user!tab)]</local-name>
            <parent-name>[jason_user_tab]</parent-name>
            <remote-alias>userid:</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>register_time:</remote-name>
            <remote-type>7</remote-type>
            <local-name>[register_time:]</local-name>
            <parent-name>[jason_user_tab]</parent-name>
            <remote-alias>register_time:</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country:</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country:]</local-name>
            <parent-name>[jason_user_tab]</parent-name>
            <remote-alias>country:</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[jason_user_tab]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C10001:no:A1:C10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' caption='Country:' datatype='string' name='[country:]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Gmv:' datatype='integer' name='[gmv:]' role='measure' type='quantitative' />
      <column caption='Itemid:' datatype='integer' name='[itemid:]' role='measure' type='quantitative' />
      <column caption='Order Time:' datatype='date' name='[order_time:]' role='dimension' type='ordinal' />
      <column caption='Orderid:' datatype='integer' name='[orderid:]' role='measure' type='quantitative' />
      <column caption='Register Time:' datatype='date' name='[register_time:]' role='dimension' type='ordinal' />
      <column caption='Userid: (Jason!User!Tab)' datatype='integer' name='[userid: (jason!user!tab)]' role='measure' type='quantitative' />
      <column caption='Userid:' datatype='integer' name='[userid:]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.418351' measure-ordering='alphabetic' measure-percentage='0.581649' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='jason_order_tab+ (jason_sample) (4)' inline='true' name='federated.0et90yj0bl4a2q13tpi6u089sk6x' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='jason_sample' name='excel-direct.1rvl4lr0zyg5wf13c9jpo1jfphot'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/johnny_hung/reference_work/ja_javascript/ja_tableau/data_sample/jason_sample.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[jason_order_tab].[userid:]' />
              <expression op='[jason_user_tab].[userid:]' />
            </expression>
          </clause>
          <relation connection='excel-direct.1rvl4lr0zyg5wf13c9jpo1jfphot' name='jason_order_tab' table='[jason_order_tab$]' type='table'>
            <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='orderid:' ordinal='0' />
              <column datatype='integer' name='userid:' ordinal='1' />
              <column datatype='integer' name='itemid:' ordinal='2' />
              <column datatype='integer' name='gmv:' ordinal='3' />
              <column datatype='date' name='order_time:' ordinal='4' />
            </columns>
          </relation>
          <relation connection='excel-direct.1rvl4lr0zyg5wf13c9jpo1jfphot' name='jason_user_tab' table='[jason_user_tab$]' type='table'>
            <columns gridOrigin='A1:C10001:no:A1:C10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='userid:' ordinal='5' />
              <column datatype='date' name='register_time:' ordinal='6' />
              <column datatype='string' name='country:' ordinal='7' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[country:]' value='[jason_user_tab].[country:]' />
          <map key='[gmv:]' value='[jason_order_tab].[gmv:]' />
          <map key='[itemid:]' value='[jason_order_tab].[itemid:]' />
          <map key='[order_time:]' value='[jason_order_tab].[order_time:]' />
          <map key='[orderid:]' value='[jason_order_tab].[orderid:]' />
          <map key='[register_time:]' value='[jason_user_tab].[register_time:]' />
          <map key='[userid: (jason!user!tab)]' value='[jason_user_tab].[userid:]' />
          <map key='[userid:]' value='[jason_order_tab].[userid:]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>orderid:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[orderid:]</local-name>
            <parent-name>[jason_order_tab]</parent-name>
            <remote-alias>orderid:</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>userid:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[userid:]</local-name>
            <parent-name>[jason_order_tab]</parent-name>
            <remote-alias>userid:</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>itemid:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[itemid:]</local-name>
            <parent-name>[jason_order_tab]</parent-name>
            <remote-alias>itemid:</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gmv:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gmv:]</local-name>
            <parent-name>[jason_order_tab]</parent-name>
            <remote-alias>gmv:</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_time:</remote-name>
            <remote-type>7</remote-type>
            <local-name>[order_time:]</local-name>
            <parent-name>[jason_order_tab]</parent-name>
            <remote-alias>order_time:</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[jason_order_tab]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>userid:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[userid: (jason!user!tab)]</local-name>
            <parent-name>[jason_user_tab]</parent-name>
            <remote-alias>userid:</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>register_time:</remote-name>
            <remote-type>7</remote-type>
            <local-name>[register_time:]</local-name>
            <parent-name>[jason_user_tab]</parent-name>
            <remote-alias>register_time:</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country:</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country:]</local-name>
            <parent-name>[jason_user_tab]</parent-name>
            <remote-alias>country:</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[jason_user_tab]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C10001:no:A1:C10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' caption='Country:' datatype='string' name='[country:]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Gmv:' datatype='integer' name='[gmv:]' role='measure' type='quantitative' />
      <column caption='Itemid:' datatype='integer' name='[itemid:]' role='measure' type='quantitative' />
      <column caption='Order Time:' datatype='date' name='[order_time:]' role='dimension' type='ordinal' />
      <column caption='Orderid:' datatype='integer' name='[orderid:]' role='measure' type='quantitative' />
      <column caption='Register Time:' datatype='date' name='[register_time:]' role='dimension' type='ordinal' />
      <column caption='Userid: (Jason!User!Tab)' datatype='integer' name='[userid: (jason!user!tab)]' role='measure' type='quantitative' />
      <column caption='Userid:' datatype='integer' name='[userid:]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.414791' measure-ordering='alphabetic' measure-percentage='0.585209' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='jason_order_tab+ (jason_sample_v1)' inline='true' name='federated.108b2hv11pf9de17lzazs1iogdef' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='jason_sample_v1' name='excel-direct.1ies4161q0sveg15rznve1kabdpp'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/johnny_hung/reference_work/ja_javascript/ja_tableau/data_sample/jason_sample_v1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='full' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[jason_order_tab].[userid:]' />
              <expression op='[jason_user_tab].[userid:]' />
            </expression>
          </clause>
          <relation connection='excel-direct.1ies4161q0sveg15rznve1kabdpp' name='jason_order_tab' table='[jason_order_tab$]' type='table'>
            <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='orderid:' ordinal='0' />
              <column datatype='integer' name='userid:' ordinal='1' />
              <column datatype='integer' name='itemid:' ordinal='2' />
              <column datatype='integer' name='gmv:' ordinal='3' />
              <column datatype='date' name='order_time:' ordinal='4' />
            </columns>
          </relation>
          <relation connection='excel-direct.1ies4161q0sveg15rznve1kabdpp' name='jason_user_tab' table='[jason_user_tab$]' type='table'>
            <columns gridOrigin='A1:C10001:no:A1:C10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='userid:' ordinal='0' />
              <column datatype='date' name='register_time:' ordinal='1' />
              <column datatype='string' name='country:' ordinal='2' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[country:]' value='[jason_user_tab].[country:]' />
          <map key='[gmv:]' value='[jason_order_tab].[gmv:]' />
          <map key='[itemid:]' value='[jason_order_tab].[itemid:]' />
          <map key='[order_time:]' value='[jason_order_tab].[order_time:]' />
          <map key='[orderid:]' value='[jason_order_tab].[orderid:]' />
          <map key='[register_time:]' value='[jason_user_tab].[register_time:]' />
          <map key='[userid: (jason!user!tab)]' value='[jason_user_tab].[userid:]' />
          <map key='[userid:]' value='[jason_order_tab].[userid:]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>orderid:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[orderid:]</local-name>
            <parent-name>[jason_order_tab]</parent-name>
            <remote-alias>orderid:</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>userid:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[userid:]</local-name>
            <parent-name>[jason_order_tab]</parent-name>
            <remote-alias>userid:</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>itemid:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[itemid:]</local-name>
            <parent-name>[jason_order_tab]</parent-name>
            <remote-alias>itemid:</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gmv:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gmv:]</local-name>
            <parent-name>[jason_order_tab]</parent-name>
            <remote-alias>gmv:</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_time:</remote-name>
            <remote-type>7</remote-type>
            <local-name>[order_time:]</local-name>
            <parent-name>[jason_order_tab]</parent-name>
            <remote-alias>order_time:</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[jason_order_tab]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>userid:</remote-name>
            <remote-type>20</remote-type>
            <local-name>[userid: (jason!user!tab)]</local-name>
            <parent-name>[jason_user_tab]</parent-name>
            <remote-alias>userid:</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>register_time:</remote-name>
            <remote-type>7</remote-type>
            <local-name>[register_time:]</local-name>
            <parent-name>[jason_user_tab]</parent-name>
            <remote-alias>register_time:</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country:</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country:]</local-name>
            <parent-name>[jason_user_tab]</parent-name>
            <remote-alias>country:</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[jason_user_tab]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C10001:no:A1:C10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Target_Value' datatype='real' name='[Calculation_3898006223588990981]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG(295000)' />
      </column>
      <column caption='Goal' datatype='real' name='[Calculation_3898006223598608390]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG(298000)' />
      </column>
      <column caption='Minus_Gmv' datatype='integer' name='[Calculation_3898006223613526023]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='-[gmv:]' />
      </column>
      <column caption='Random_Ship_date' datatype='integer' name='[Calculation_3898006223619461128]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[order_time:],DATEADD(&apos;day&apos;,2,[order_time:]))' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Random_Ship_date_V2' datatype='integer' name='[Random_Ship_date (copy)_3898006223626473481]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [order_time:] &lt; #2017-02-01# THEN DATEDIFF(&apos;day&apos;,[order_time:],DATEADD(&apos;day&apos;,2,[order_time:]))&#10;ELSEIF [order_time:] &lt; #2017-02-15# THEN DATEDIFF(&apos;day&apos;,[order_time:],DATEADD(&apos;day&apos;,1,[order_time:]))&#10;ELSEIF [order_time:] &lt; #2017-03-01# THEN DATEDIFF(&apos;day&apos;,[order_time:],DATEADD(&apos;day&apos;,3,[order_time:]))&#10;ELSEIF [order_time:] &gt;= #2017-03-01# THEN DATEDIFF(&apos;day&apos;,[order_time:],DATEADD(&apos;day&apos;,3,[order_time:]))&#10;END' />
      </column>
      <column aggregation='None' caption='Country:' datatype='string' name='[country:]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Gmv:' datatype='integer' name='[gmv:]' role='measure' type='quantitative' />
      <column caption='Itemid:' datatype='integer' name='[itemid:]' role='measure' type='quantitative' />
      <column caption='Order Time:' datatype='date' name='[order_time:]' role='dimension' type='ordinal' />
      <column caption='Orderid:' datatype='integer' name='[orderid:]' role='measure' type='quantitative' />
      <column caption='Register Time:' datatype='date' name='[register_time:]' role='dimension' type='ordinal' />
      <column caption='Userid: (Jason!User!Tab)' datatype='integer' name='[userid: (jason!user!tab)]' role='measure' type='quantitative' />
      <column caption='Userid:' datatype='integer' name='[userid:]' role='measure' type='quantitative' />
      <column-instance column='[order_time:]' derivation='Month' name='[mn:order_time::ok]' pivot='key' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.666667' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[mn:order_time::ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>3</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>6</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2</bucket>
            </map>
            <map to='#edc948'>
              <bucket>5</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='AreaChart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Used order time for Rows&#10;Add Gmv to Columns&#10;Add Country to Marks-Color</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='jason_order_tab+ (jason_sample_v1)' name='federated.108b2hv11pf9de17lzazs1iogdef' />
          </datasources>
          <datasource-dependencies datasource='federated.108b2hv11pf9de17lzazs1iogdef'>
            <column aggregation='None' caption='Country:' datatype='string' name='[country:]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gmv:' datatype='integer' name='[gmv:]' role='measure' type='quantitative' />
            <column-instance column='[order_time:]' derivation='Month' name='[mn:order_time::ok]' pivot='key' type='ordinal' />
            <column-instance column='[order_time:]' derivation='Month' name='[mn:order_time::qk]' pivot='key' type='quantitative' />
            <column-instance column='[country:]' derivation='None' name='[none:country::nk]' pivot='key' type='nominal' />
            <column caption='Order Time:' datatype='date' name='[order_time:]' role='dimension' type='ordinal' />
            <column-instance column='[gmv:]' derivation='Sum' name='[sum:gmv::qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]'>
            <groupfilter from='1' function='range' level='[mn:order_time::ok]' to='6' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refband'>
            <format attr='reverse-palette' id='refline0' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.108b2hv11pf9de17lzazs1iogdef].[none:country::nk]' />
              <text column='[federated.108b2hv11pf9de17lzazs1iogdef].[none:country::nk]' />
            </encodings>
            <reference-line axis-column='[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='percentile' id='refline0' label-type='automatic' scope='per-pane' symmetric='false' value-column='[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::qk]' z-order='1'>
              <reference-line-value percentile='95' />
            </reference-line>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.108b2hv11pf9de17lzazs1iogdef].[sum:gmv::qk]</rows>
        <cols>[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::qk]</cols>
      </table>
      <simple-id uuid='{CB1DC0AB-1305-4246-92BC-826F0F5DAC4A}' />
    </worksheet>
    <worksheet name='Bullet Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='jason_order_tab+ (jason_sample_v1)' name='federated.108b2hv11pf9de17lzazs1iogdef' />
          </datasources>
          <datasource-dependencies datasource='federated.108b2hv11pf9de17lzazs1iogdef'>
            <column caption='Target_Value' datatype='real' name='[Calculation_3898006223588990981]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(295000)' />
            </column>
            <column caption='Gmv:' datatype='integer' name='[gmv:]' role='measure' type='quantitative' />
            <column-instance column='[order_time:]' derivation='Month' name='[mn:order_time::ok]' pivot='key' type='ordinal' />
            <column caption='Order Time:' datatype='date' name='[order_time:]' role='dimension' type='ordinal' />
            <column-instance column='[gmv:]' derivation='Sum' name='[sum:gmv::qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3898006223588990981]' derivation='User' name='[usr:Calculation_3898006223588990981:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]'>
            <groupfilter from='1' function='range' level='[mn:order_time::ok]' to='5' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.108b2hv11pf9de17lzazs1iogdef].[sum:gmv::qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='10' />
            <format attr='div-level' scope='cols' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.108b2hv11pf9de17lzazs1iogdef].[usr:Calculation_3898006223588990981:qk]' />
            </encodings>
            <reference-line axis-column='[federated.108b2hv11pf9de17lzazs1iogdef].[sum:gmv::qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' value-column='[federated.108b2hv11pf9de17lzazs1iogdef].[usr:Calculation_3898006223588990981:qk]' z-order='2' />
            <reference-line axis-column='[federated.108b2hv11pf9de17lzazs1iogdef].[sum:gmv::qk]' enable-instant-analytics='true' fill-above='true' fill-below='true' formula='average' id='refline1' label-type='none' percentage-bands='true' probability='95' scope='per-cell' symmetric='false' value-column='[federated.108b2hv11pf9de17lzazs1iogdef].[usr:Calculation_3898006223588990981:qk]' z-order='1'>
              <reference-line-value percentage='60' />
              <reference-line-value percentage='80' />
            </reference-line>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.108b2hv11pf9de17lzazs1iogdef].[sum:gmv::qk]</rows>
        <cols>[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]</cols>
      </table>
      <simple-id uuid='{2B62C613-2529-429C-B4CB-E2B102D2260B}' />
    </worksheet>
    <worksheet name='Bullet Customized'>
      <table>
        <view>
          <datasources>
            <datasource caption='jason_order_tab+ (jason_sample_v1)' name='federated.108b2hv11pf9de17lzazs1iogdef' />
          </datasources>
          <datasource-dependencies datasource='federated.108b2hv11pf9de17lzazs1iogdef'>
            <column caption='Target_Value' datatype='real' name='[Calculation_3898006223588990981]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(295000)' />
            </column>
            <column caption='Gmv:' datatype='integer' name='[gmv:]' role='measure' type='quantitative' />
            <column-instance column='[order_time:]' derivation='Month' name='[mn:order_time::ok]' pivot='key' type='ordinal' />
            <column caption='Order Time:' datatype='date' name='[order_time:]' role='dimension' type='ordinal' />
            <column-instance column='[gmv:]' derivation='Sum' name='[sum:gmv::qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3898006223588990981]' derivation='User' name='[usr:Calculation_3898006223588990981:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]'>
            <groupfilter from='1' function='range' level='[mn:order_time::ok]' to='5' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#1b1b1b' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='solid' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='reverse-palette' id='refline1' value='false' />
            <format attr='palette' id='refline1' value='green80' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.108b2hv11pf9de17lzazs1iogdef].[usr:Calculation_3898006223588990981:qk]' />
            </encodings>
            <reference-line axis-column='[federated.108b2hv11pf9de17lzazs1iogdef].[sum:gmv::qk]' enable-instant-analytics='true' formula='total' id='refline0' label-type='none' scope='per-cell' value-column='[federated.108b2hv11pf9de17lzazs1iogdef].[usr:Calculation_3898006223588990981:qk]' z-order='1' />
            <reference-line axis-column='[federated.108b2hv11pf9de17lzazs1iogdef].[sum:gmv::qk]' enable-instant-analytics='true' fill-above='false' fill-below='true' formula='average' id='refline1' label-type='none' percentage-bands='true' probability='95' scope='per-cell' symmetric='false' value-column='[federated.108b2hv11pf9de17lzazs1iogdef].[usr:Calculation_3898006223588990981:qk]' z-order='2'>
              <reference-line-value percentage='60' />
              <reference-line-value percentage='80' />
            </reference-line>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]</rows>
        <cols>[federated.108b2hv11pf9de17lzazs1iogdef].[sum:gmv::qk]</cols>
      </table>
      <simple-id uuid='{2398FBA6-D601-4251-82A8-E3645317E813}' />
    </worksheet>
    <worksheet name='GanttChart'>
      <table>
        <view>
          <datasources>
            <datasource caption='jason_order_tab+ (jason_sample_v1)' name='federated.108b2hv11pf9de17lzazs1iogdef' />
          </datasources>
          <datasource-dependencies datasource='federated.108b2hv11pf9de17lzazs1iogdef'>
            <column caption='Random_Ship_date_V2' datatype='integer' name='[Random_Ship_date (copy)_3898006223626473481]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [order_time:] &lt; #2017-02-01# THEN DATEDIFF(&apos;day&apos;,[order_time:],DATEADD(&apos;day&apos;,2,[order_time:]))&#10;ELSEIF [order_time:] &lt; #2017-02-15# THEN DATEDIFF(&apos;day&apos;,[order_time:],DATEADD(&apos;day&apos;,1,[order_time:]))&#10;ELSEIF [order_time:] &lt; #2017-03-01# THEN DATEDIFF(&apos;day&apos;,[order_time:],DATEADD(&apos;day&apos;,3,[order_time:]))&#10;ELSEIF [order_time:] &gt;= #2017-03-01# THEN DATEDIFF(&apos;day&apos;,[order_time:],DATEADD(&apos;day&apos;,3,[order_time:]))&#10;END' />
            </column>
            <column-instance column='[Random_Ship_date (copy)_3898006223626473481]' derivation='Avg' name='[avg:Random_Ship_date (copy)_3898006223626473481:qk]' pivot='key' type='quantitative' />
            <column-instance column='[order_time:]' derivation='Day' name='[dy:order_time::ok]' pivot='key' type='ordinal' />
            <column-instance column='[order_time:]' derivation='Month' name='[mn:order_time::ok]' pivot='key' type='ordinal' />
            <column caption='Order Time:' datatype='date' name='[order_time:]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]'>
            <groupfilter from='1' function='range' level='[mn:order_time::ok]' to='5' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.108b2hv11pf9de17lzazs1iogdef].[avg:Random_Ship_date (copy)_3898006223626473481:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]</rows>
        <cols>[federated.108b2hv11pf9de17lzazs1iogdef].[dy:order_time::ok]</cols>
      </table>
      <simple-id uuid='{0F46111F-8130-4FB5-937F-1B24E1CC3966}' />
    </worksheet>
    <worksheet name='HeatMap'>
      <table>
        <view>
          <datasources>
            <datasource caption='jason_order_tab+ (jason_sample_v1)' name='federated.108b2hv11pf9de17lzazs1iogdef' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.108b2hv11pf9de17lzazs1iogdef'>
            <column caption='Target_Value' datatype='real' name='[Calculation_3898006223588990981]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(295000)' />
            </column>
            <column aggregation='None' caption='Country:' datatype='string' name='[country:]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gmv:' datatype='integer' name='[gmv:]' role='measure' type='quantitative' />
            <column-instance column='[order_time:]' derivation='Month' name='[mn:order_time::ok]' pivot='key' type='ordinal' />
            <column-instance column='[country:]' derivation='None' name='[none:country::nk]' pivot='key' type='nominal' />
            <column caption='Order Time:' datatype='date' name='[order_time:]' role='dimension' type='ordinal' />
            <column-instance column='[gmv:]' derivation='Sum' name='[sum:gmv::qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3898006223588990981]' derivation='User' name='[usr:Calculation_3898006223588990981:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]'>
            <groupfilter from='1' function='range' level='[mn:order_time::ok]' to='6' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.108b2hv11pf9de17lzazs1iogdef].[none:country::nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country::nk]' member='&quot;ID&quot;' />
              <groupfilter function='member' level='[none:country::nk]' member='&quot;MY&quot;' />
              <groupfilter function='member' level='[none:country::nk]' member='&quot;PH&quot;' />
              <groupfilter function='member' level='[none:country::nk]' member='&quot;SG&quot;' />
              <groupfilter function='member' level='[none:country::nk]' member='&quot;TH&quot;' />
              <groupfilter function='member' level='[none:country::nk]' member='&quot;TW&quot;' />
              <groupfilter function='member' level='[none:country::nk]' member='&quot;VN&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]</column>
            <column>[federated.108b2hv11pf9de17lzazs1iogdef].[none:country::nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.108b2hv11pf9de17lzazs1iogdef].[sum:gmv::qk]' />
              <color column='[federated.108b2hv11pf9de17lzazs1iogdef].[usr:Calculation_3898006223588990981:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.108b2hv11pf9de17lzazs1iogdef].[none:country::nk]</rows>
        <cols>[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]</cols>
      </table>
      <simple-id uuid='{A38AA79C-933B-4C58-8814-41A85B95669D}' />
    </worksheet>
    <worksheet name='Pareto Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&#10;Use to combine the integred value curve for better data-analysis.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='jason_order_tab+ (jason_sample_v1)' name='federated.108b2hv11pf9de17lzazs1iogdef' />
          </datasources>
          <datasource-dependencies datasource='federated.108b2hv11pf9de17lzazs1iogdef'>
            <column caption='Gmv:' datatype='integer' name='[gmv:]' role='measure' type='quantitative' />
            <column-instance column='[order_time:]' derivation='Month' name='[mn:order_time::ok]' pivot='key' type='ordinal' />
            <column caption='Order Time:' datatype='date' name='[order_time:]' role='dimension' type='ordinal' />
            <column-instance column='[gmv:]' derivation='Sum' name='[pcto:cum:sum:gmv::qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[gmv:]' derivation='Sum' name='[sum:gmv::qk]' pivot='key' type='quantitative' />
            <column caption='Userid: (Jason!User!Tab)' datatype='integer' name='[userid: (jason!user!tab)]' role='measure' type='quantitative' />
            <column caption='Userid:' datatype='integer' name='[userid:]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]'>
            <groupfilter expression='COUNT([userid:]) == COUNT([userid: (jason!user!tab)])' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[mn:order_time::ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <natural-sort column='[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]' direction='ASC' />
          <slices>
            <column>[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.108b2hv11pf9de17lzazs1iogdef].[pcto:cum:sum:gmv::qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.108b2hv11pf9de17lzazs1iogdef].[sum:gmv::qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#a0cbe8' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.108b2hv11pf9de17lzazs1iogdef].[pcto:cum:sum:gmv::qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.108b2hv11pf9de17lzazs1iogdef].[sum:gmv::qk] + [federated.108b2hv11pf9de17lzazs1iogdef].[pcto:cum:sum:gmv::qk])</rows>
        <cols>[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]</cols>
      </table>
      <simple-id uuid='{ECEA5FBF-4113-4BB6-AB5B-65DC42C01947}' />
    </worksheet>
    <worksheet name='PieChart'>
      <table>
        <view>
          <datasources>
            <datasource caption='jason_order_tab+ (jason_sample_v1)' name='federated.108b2hv11pf9de17lzazs1iogdef' />
          </datasources>
          <datasource-dependencies datasource='federated.108b2hv11pf9de17lzazs1iogdef'>
            <column caption='Gmv:' datatype='integer' name='[gmv:]' role='measure' type='quantitative' />
            <column-instance column='[order_time:]' derivation='Month' name='[mn:order_time::ok]' pivot='key' type='ordinal' />
            <column caption='Order Time:' datatype='date' name='[order_time:]' role='dimension' type='ordinal' />
            <column-instance column='[gmv:]' derivation='Sum' name='[sum:gmv::qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:order_time::ok]' member='%null%' />
              <groupfilter from='1' function='range' level='[mn:order_time::ok]' to='5' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]' />
              <wedge-size column='[federated.108b2hv11pf9de17lzazs1iogdef].[sum:gmv::qk]' />
              <size column='[federated.108b2hv11pf9de17lzazs1iogdef].[sum:gmv::qk]' />
              <text column='[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D8FA6E90-9F72-4BDA-9585-713F8FF5401A}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='order_tab+ (SQL_Test)' name='federated.07u5vh41wjavzq10lmfst19k74nb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.07u5vh41wjavzq10lmfst19k74nb'>
            <column aggregation='None' caption='Country:' datatype='string' name='[country:]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gmv:' datatype='integer' name='[gmv:]' role='measure' type='quantitative' />
            <column-instance column='[order_time:]' derivation='Month' name='[mn:order_time::ok]' pivot='key' type='ordinal' />
            <column-instance column='[country:]' derivation='None' name='[none:country::nk]' pivot='key' type='nominal' />
            <column caption='Order Time:' datatype='date' name='[order_time:]' role='dimension' type='ordinal' />
            <column-instance column='[gmv:]' derivation='Sum' name='[sum:gmv::qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07u5vh41wjavzq10lmfst19k74nb].[mn:order_time::ok]'>
            <groupfilter function='member' level='[mn:order_time::ok]' member='3' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.07u5vh41wjavzq10lmfst19k74nb].[mn:order_time::ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.07u5vh41wjavzq10lmfst19k74nb].[Longitude (generated)]' field-type='quantitative' max='17209629.388864648' min='11189744.26506393' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.07u5vh41wjavzq10lmfst19k74nb].[Latitude (generated)]' field-type='quantitative' max='2099770.8221166013' min='-2909288.6010429272' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07u5vh41wjavzq10lmfst19k74nb].[sum:gmv::qk]' />
              <lod column='[federated.07u5vh41wjavzq10lmfst19k74nb].[none:country::nk]' />
              <geometry column='[federated.07u5vh41wjavzq10lmfst19k74nb].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07u5vh41wjavzq10lmfst19k74nb].[Latitude (generated)]</rows>
        <cols>[federated.07u5vh41wjavzq10lmfst19k74nb].[Longitude (generated)]</cols>
        <show-full-range>
          <column>[federated.0mf0kyy1p2qkq213gkrbl1sbyyk1].[none:Gmv: (bin):qk]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{D5433B7C-6C72-4265-B6FA-34B83CBF6BFA}' />
    </worksheet>
    <worksheet name='TextTable'>
      <table>
        <view>
          <datasources>
            <datasource caption='jason_order_tab+ (jason_sample_v1)' name='federated.108b2hv11pf9de17lzazs1iogdef' />
          </datasources>
          <datasource-dependencies datasource='federated.108b2hv11pf9de17lzazs1iogdef'>
            <column caption='Gmv:' datatype='integer' name='[gmv:]' role='measure' type='quantitative' />
            <column-instance column='[order_time:]' derivation='Month' name='[mn:order_time::ok]' pivot='key' type='ordinal' />
            <column caption='Order Time:' datatype='date' name='[order_time:]' role='dimension' type='ordinal' />
            <column-instance column='[gmv:]' derivation='Sum' name='[sum:gmv::qk]' pivot='key' type='quantitative' />
            <column-instance column='[order_time:]' derivation='Year' name='[yr:order_time::ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]'>
            <groupfilter from='1' function='range' level='[mn:order_time::ok]' to='5' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.108b2hv11pf9de17lzazs1iogdef].[yr:order_time::ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:order_time::ok]' member='%null%' />
              <groupfilter function='member' level='[yr:order_time::ok]' member='2017' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.108b2hv11pf9de17lzazs1iogdef].[yr:order_time::ok]</column>
            <column>[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[federated.108b2hv11pf9de17lzazs1iogdef].[sum:gmv::qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]</rows>
        <cols />
      </table>
      <simple-id uuid='{84E73CA3-5AD7-4DC2-88B3-649470A01B84}' />
    </worksheet>
    <worksheet name='WaterFall'>
      <table>
        <view>
          <datasources>
            <datasource caption='jason_order_tab+ (jason_sample_v1)' name='federated.108b2hv11pf9de17lzazs1iogdef' />
          </datasources>
          <datasource-dependencies datasource='federated.108b2hv11pf9de17lzazs1iogdef'>
            <column caption='Minus_Gmv' datatype='integer' name='[Calculation_3898006223613526023]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-[gmv:]' />
            </column>
            <column-instance column='[gmv:]' derivation='Sum' name='[cum:sum:gmv::qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column caption='Gmv:' datatype='integer' name='[gmv:]' role='measure' type='quantitative' />
            <column-instance column='[order_time:]' derivation='Month' name='[mn:order_time::ok]' pivot='key' type='ordinal' />
            <column caption='Order Time:' datatype='date' name='[order_time:]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_3898006223613526023]' derivation='Sum' name='[sum:Calculation_3898006223613526023:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]'>
            <groupfilter from='1' function='range' level='[mn:order_time::ok]' to='6' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <size column='[federated.108b2hv11pf9de17lzazs1iogdef].[sum:Calculation_3898006223613526023:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.108b2hv11pf9de17lzazs1iogdef].[cum:sum:gmv::qk]</rows>
        <cols>[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]</cols>
      </table>
      <simple-id uuid='{79743273-8C97-4F14-9A83-934EF384C1C0}' />
    </worksheet>
  </worksheets>
  <windows source-height='198'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.07u5vh41wjavzq10lmfst19k74nb].[mn:order_time::ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.07u5vh41wjavzq10lmfst19k74nb].[sum:gmv::qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07u5vh41wjavzq10lmfst19k74nb].[mn:order_time::ok]</field>
            <field>[federated.07u5vh41wjavzq10lmfst19k74nb].[none:country::nk]</field>
            <field>[federated.0mf0kyy1p2qkq213gkrbl1sbyyk1].[none:Gmv: (bin):qk]</field>
            <field>[federated.0mf0kyy1p2qkq213gkrbl1sbyyk1].[yr:order_time::ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E18E5EE2-E7DF-4B33-B648-3C2C97A4033B}' />
    </window>
    <window class='worksheet' name='Pareto Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06b3mmr0muoasu1cusxad1mbt65x].[none:Calculation_3898006223530061825:qk]</field>
            <field>[federated.06b3mmr0muoasu1cusxad1mbt65x].[yr:order_time::ok]</field>
            <field>[federated.07u5vh41wjavzq10lmfst19k74nb].[yr:order_time::ok]</field>
            <field>[federated.108b2hv11pf9de17lzazs1iogdef].[yr:order_time::ok]</field>
            <field>[federated.1up5a0q1u2f3yl123q52d1ro7uqi].[yr:order_time::ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{489D4360-8323-4A28-BB08-918A873A027C}' />
    </window>
    <window class='worksheet' name='Bullet Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.108b2hv11pf9de17lzazs1iogdef].[sum:gmv::qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.108b2hv11pf9de17lzazs1iogdef].[yr:order_time::ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{58CB5B83-7A3B-4FA5-A395-A44AF2E5EC53}' />
    </window>
    <window class='worksheet' name='Bullet Customized'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.108b2hv11pf9de17lzazs1iogdef].[yr:order_time::ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CA23B8DA-8A74-4720-8423-44B4AC3F646B}' />
    </window>
    <window class='worksheet' name='TextTable'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.108b2hv11pf9de17lzazs1iogdef].[yr:order_time::ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{62DEAF59-7F73-4D15-8483-5E9F3C7DA708}' />
    </window>
    <window class='worksheet' name='HeatMap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.108b2hv11pf9de17lzazs1iogdef].[sum:gmv::qk]' type='size' />
            <card pane-specification-id='0' param='[federated.108b2hv11pf9de17lzazs1iogdef].[usr:Calculation_3898006223588990981:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]</field>
            <field>[federated.108b2hv11pf9de17lzazs1iogdef].[none:country::nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{214847E6-7F11-43D2-8B9A-71C9F084027F}' />
    </window>
    <window class='worksheet' name='WaterFall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]</field>
            <field>[federated.108b2hv11pf9de17lzazs1iogdef].[yr:order_time::ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6EB060B3-B045-4271-92F1-B834976EDF11}' />
    </window>
    <window class='worksheet' name='GanttChart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.108b2hv11pf9de17lzazs1iogdef].[avg:Random_Ship_date (copy)_3898006223626473481:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.108b2hv11pf9de17lzazs1iogdef].[yr:order_time::ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{29AF84B7-1E91-40C3-B744-73028C401C70}' />
    </window>
    <window class='worksheet' name='PieChart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]' type='color' />
            <card pane-specification-id='0' param='[federated.108b2hv11pf9de17lzazs1iogdef].[sum:gmv::qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::ok]</field>
            <field>[federated.108b2hv11pf9de17lzazs1iogdef].[yr:order_time::ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{33A8BA10-E2A5-4B39-BB25-A84A45E2F496}' />
    </window>
    <window class='worksheet' maximized='true' name='AreaChart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.108b2hv11pf9de17lzazs1iogdef].[none:country::nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.108b2hv11pf9de17lzazs1iogdef].[mn:order_time::qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.108b2hv11pf9de17lzazs1iogdef].[dy:order_time::ok]</field>
            <field>[federated.108b2hv11pf9de17lzazs1iogdef].[none:country::nk]</field>
            <field>[federated.108b2hv11pf9de17lzazs1iogdef].[yr:order_time::ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{27DF9161-DA1B-4A11-B453-D46BB7D9A5D7}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='AreaChart' width='384'>
      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
      fyehVoFIIELyAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Bullet Chart' width='384'>
      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
    </thumbnail>
    <thumbnail height='358' name='Bullet Customized' width='384'>
      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
      DABJCur/AaJo4vcVBf1zAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='288' name='GanttChart' width='384'>
      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
      70lg2q4J2y8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='368' name='HeatMap' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAFwCAYAAACxVaymAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAbWUlEQVR4nO3de5RVZRnH8e8MchtBAQdIRLkWLEEIb2mgpGLhDdBCRjAvJF7QVFxZaeYF
      8YKybOXSViIhJiWGCRmrqJC4g4imJqSCykLyxk0iCW8z/cF63e5xBhgYzj5n3u/nn7POOfvs
      85wz6PP+9n7ffYoqKioqkCRFpzjrAiRJ2bABSFKkbACSFCkbgCRFygYgSZGyAUhSpGwAkhQp
      G4AkRcoGIEmRsgFIUqRsAJIUKRuAJEXKBiBJkbIBSFKkbACSFCkbgCRFygYgSZGyAUhSpGwA
      khQpG4AkRcoGIEmRsgFIUqRsAJIUKRuAJEXKBiBJkdon6wIk7bqtW7eybt06AA4++GAAiov3
      7jjuo48+AuAPf/gDACeddBIALVq02KvvW9veeecdAD788EMA2rVrl2U5ecEEIEmRMgFIeWzr
      1q0AjB49GoDZs2dTXl4OQKNGjQC44oorACgrK9srNYQR89ixYwE49NBDgdwngGnTpgFw++23
      79L2jRs3BmDevHkA3H///QC8/PLLAEydOrW2Syw4JgBJipQJQMpj99xzDwBLly4FYNy4cXTt
      2hVIjsmPGzcOgLZt2wLQp0+fXJeZE3379gW+eOz+Bz/4AQD9+/cHoF+/fgDUq1cvtd3VV18N
      wCeffLJX6ywkJgBJipQJQMpDW7ZsAWDGjBkAXHnllQAcf/zxn20zYsQIAJ577jkAfvvb3wJJ
      AgjHvp988kkArr/+egBuu+02ADp16gTAyJEjAXjzzTeBJHWsXLkSgDZt2uyw1ueffx6Au+66
      K7WfXr16AXDzzTcDyTmDmtYVhNdXPvdQv359AA466CAADj/88CrrfOqppwBYvXo1AD/84Q9T
      9fzud78D4JBDDgFg1qxZAHTs2BGAs846C4A//elPACxfvhyAY489NvU5w6yszZs3pz7XkiVL
      AGjVqhUA1157LQBf+9rXPqvx4osvBuAb3/gGAEOHDq3ys9QWE4AkRcoEIOWhMIoOx6t79+5d
      7bZhBDplypTU4xs2bABgxYoVAPz4xz8GYO3atUAy8gzvcdVVVwHJsfMLL7wQgI0bNwJJ0gj+
      +9//AjBq1CgAjjzySADOO+88AMaPHw8kyeDOO++sUV217a233gLg9ddfTz0e6gnnWQ444AAA
      LrjgAgB+9atfpeofNGgQwGfnYiZMmADAwIEDATjiiCMAuOOOOwBYtWoVkHzOuXPnAkkC+fOf
      /wxASUnJZzOUwr73NhOAJEXKBCDloffffz91v1mzZtVuG54LI/XK3nvvPSA5th7m0zds2BCA
      Z555BoA1a9YAMH36dCCZVRTORzzwwAOp/S5cuBCA//3vfwDccsstwPaRLEBFRQWQrGEI6xd2
      ta5ca9myJZB8jiCc42jSpAmQnI8JQvJ69913gWTl9OzZs1P7O+WUUwA44YQTUrdPP/30Z/fD
      +YhcMQFIUqRMAFIeKi0tTd0Px6n333//L2wbngsj2Mr2228/IDkWX3mEHY69N2/eHEhG/jsT
      rq0TRvqVZ+2EVcwff/wxAJs2bapRXfmi8nqCyipfiylcqykknokTJwLw2GOPpbYrKioCkiSU
      BROAJEXKBCDloTAKb9CgAZDMHAlz0j9v/vz5QHIsvbJwTZxwW1m4plA47xBud3TeAZI0EkbA
      l1xyCQD77FP1/1aaNm1ao7oKVeWUdvLJJwPJuojKsrwqqQlAkiJlApDyUJhJM2DAACA5jtyu
      XbvPrsb5+OOPA/Diiy8CcN999+3We1Wecx7m7w8fPhyARYsWVfm6MKL99NNPU9sNGzYstV24
      ZlGYH1/XhdlCXbp0AZIVwEcffTSQJLXwfYVzH61ateK6664DkrUd4e+/t5gAJClSJgApj4XV
      ueG4/I9+9KPPZt2EkWNYUXrMMcdUuY8w26Q6HTp0AJIVvA8//DCQXBune/fuVe4vHLsO17S5
      9957AXj00UdT2x111FG7VVdtC+9X3S+o1XY9N954I5Bc6+iiiy5KPR/O83z+9w3mzJkDJDOy
      TACSpL2iqCIMJyTlvQ8++OCzFadhBL6zeeo1Fa5i+cEHHwA7vxpoEOa9h3UJYZ5/vs7vz7Ww
      DiIkkKrWdOSaCUCSImUCkKRImQAkKVI2AEmKlA1AkiJlA5CkSNkAJClSNgBJipQNQJIiZQOQ
      pEjZACQpUjYASYqUDUCSImUDkKRI2QAkKVI2AEmKlA1AkiJlA5CkSNkAJClS+2RdgCTtia1b
      twLwySefANC4cWMA6tevn1lNhcIEIEmR8jeBFZXFixcDcOWVVwIwe/ZsAJo2bZpJPf379wdg
      w4YNO9xu/vz5ADRq1ChntYwaNQqAoUOHVrn9gw8+CMD48eMBaN++PQBTp07dazVWZfDgwQC8
      8cYbAFxyySUAjBgxIqd11Mb3l+vvzgQgSZHyHICiFIJv1gE4vH9ZWRkA/fr1q3K7Bg0a5KyW
      tm3bArBgwQKg+hHswoULAejQoQOQHIPPlTfffBNIRv5hBB7SUq4TQKF9f2ACkKRomQCkPNCm
      TRsAevbsmXElcMIJJwDw6KOPAsksm5KSEgA2bdoEwCuvvALAsGHDgOR8Sq6EkX4YQZ999tkA
      fO973wNg/fr1AJSWlua0rkL5/sAEIEnRMgFISuncuTOQjJyfeeYZAPr27QskM6l69OgBZDeD
      at68eQB8/etfB6B79+6pesIx+EGDBuW0rkL5/sAEIEnRMgFIeSDM/547d27q8f322w+Au+66
      K+c1HXfccUAyWyWMYMP9Pn36AFBeXp7TurZs2QLAP/7xDwCGDx8OQHHx9vHsMcccAyQJIdcJ
      IMjX7+/zTACSFCkTgKKS9bz/6jRv3hxIjh8H4bo2WQgj1DFjxgDJSHXJkiVAMs++cmrZ2xYt
      WgTAp59+CsBf//pXAObMmQPAO++8A8Crr74KwEcffQTkZi3F5+Xr9/d5JgBJipQJQFFZtWoV
      kBwv3pvX1qmJsAL4nHPOybiSxJFHHgkkx9ynT58OJLNWwrV/cj2CDcf2v/SlLwHJfP8g1Pfh
      hx8CySyc3r1756pEIH+/v88zAUhSpEwAqpPee+89ALZt2wYkqy+ffPJJALp06QJ88bjwdddd
      B8Cxxx4LwIABAwBYsWIFAJMmTQLgsssuA5JVqLmyYsWKamuorvbdFb6bo446CoD77rsPgNNO
      O22Xa4Xqv7OwUnblypUA3HjjjTvcXzjmH84BXHHFFQB8+9vfrnL7c889F0gSQ0gA1b1vbf+N
      9+T7q+3vLqj834UJQJIiZQJQnfTaa68B8P3vfz/1eKtWrQAYPXp0la8LM0nCrJwwil63bh2Q
      XK8lXL1zTxNAUVERkJyT2Jl169ZVW0N1tde0lnAbhPnsYSQd7ld+XVW1QvXf2b/+9S8Ann76
      6V2q74UXXgCSY+o7O6YfZuHMmDEj9Xh177unf+Pa/P5q+7sLKv93YQKQpEj5i2Cq09asWQMk
      11pv164dAPXq1cusJilr4b8LE4AkRcoEIEmRMgFIUqRsAJIUKRuAJEXKBiBJkbIBSFKkbACS
      FCkbgCRFao+vBbRs2bLaqEOSlGMmAEmKlCuBpch1KxuTdQkpy6fckHUJNZJP319NvzsTgCRF
      yt8DUJ2SL6Ox6kZi+VBfoY2wg3z47qBwv7+qmAAkKVI2AEmKlA1AkiJlA5CkSNkAJClSNgBJ
      ipQNQJIildk6gKuvvhqApk2bAnDrrbcC8MILLwBw0UUXpbZv1KgRAB06dABg8ODBAJxxxhl7
      v1hJqoNMAJIUqcwSQHl5eeq28uPhEkV33303AMXF23vVwoULARg9ejQA69atA2D48OF7uWJJ
      qltMAJIUqby/FtBhhx0GQGlpKQB9+/YFknMHEydOBODss88GoEmTJrkuUZIKkglAkiJVsA1g
      4MCBDBw4kG3btrFt2zZWr17N6tWrsy5LkgpGwTYASdKeyftzANUJ5wSCMBtIkrRrTACSFKmC
      TQDvvvtu6n7r1q0zqkSSCpMJQJIiVbAJ4Pe//z0A++67LwDt27fPsBpJKjwmAEmKVN4ngGef
      fRaA+vXrAzB//nwA/vjHPwJw5ZVXAlBSUpJBdZJUuEwAkhSpvE8AP/nJTwBo3LgxkPwewM03
      3wzA6aefnkldklToTACSFKnMEsC9995b5eO9evUCYNmyZbksR5KiYwKQpEjZACQpUjYASYqU
      DUCSImUDkKRI2QAkKVI2AEmKVFFFRUVF1kVIknLPBCBJkbIBSFKkbACSFKm8vxqotCu6lY3J
      uoSU5VNuyLoEaadMAJIUKROAlEP5kFSqSyf5UBtY356oafI0AUhSpGwAkhQpG4AkRcoGIEmR
      sgFIUqRsAJIUKRuAJEUqs3UA/fv3B2DDhg0AjBo1CoChQ4dWuf2DDz4IwPjx4wFo3749AJMm
      TQJgwIABAJx++ump/VU2cuRIABo2bAjAz372s93+DJJUyEwAkhSpzBJA+BmCtm3bArBgwQKg
      +gSwcOFCADp06ADAJ598AsC+++4LwPnnnw/AL3/5SwCGDRsGQKtWrQB47rnnAHjmmWcAeOSR
      R2rro0hSQTIBSFKkMr8W0AknnADAo48+CsDWrVsBKCkpAWDTpk0AvPLKK0Aysp89e3ZqP2Vl
      ZQBMmTIFgAkTJgBw/fXXA0ky6NevHwBdu3at7Y8iSQXFBCBJkco8AXTu3BmA0tJSIDlG37dv
      XwAWL14MQI8ePQBo2rRplftp0KABAJdeeikAt912G5CM9F944QUApk6dWrsfQJIKlAlAkiKV
      eQIIjjvuOCCZ7RMSQLjfp08fAMrLy3e4n7AOYPLkyQDcfvvtAJx55pkAHHLIIbVZtiQVLBOA
      JEUqbxJAGOGPGbP9V3XCSH/JkiUAjBgxAoC5c+fucD/Fxdt7WlgXcNNNNwFw4YUX1nLFklTY
      TACSFKm8SQBHHnkkAFu2bAFg+vTpQDLrJ1z7Z2cJINh///13eF+SYmcCkKRI5U0CCPP4jzrq
      KADuu+8+AE477bTMapKkuswEIEmRyiwBFBUVpW6DsB5g3rx5qfuVX7e77ydJ2s4EIEmRyiwB
      zJw5s8rHw4rdcFvZeeedl7qtTlhXsGzZst0tUZLqNBOAJEXKBiBJkbIBSFKkbACSFCkbgCRF
      ygYgSZEqqqioqMi6CElS7pkAJClSNgBJipQNQJIilTeXg5b2RLeyMVmXkLJ8yg1Zl6Acyad/
      ezX9d2cCkKRImQCkHMqH0WJ1o8R8qA0Kt75CZAKQpEjZACQpUjYASYqUDUCSImUDkKRI2QAk
      KVI2AEmKVGbrAPr37w/Ahg0bUo8feOCBAJx88skADBs2DIAWLVoAMG7cOABefvllACZMmFDl
      /sePHw/AU089BcBjjz1Wa7VLUl1gApCkSGWWAMLPEAwZMgSAE088EYCXXnoJgIcffhiAN998
      E4C77ror9bqd/YxBeXn5Lm0nSbEyAUhSpDK/FtBBBx0EwOGHH5663bhxIwAzZszIpjBJquNM
      AJIUqcwTQHU2bdoEQElJSZXPb926FYAXX3yxyufffvvtvVOYJNURJgBJilTmCSDM+nniiScA
      ePbZZwH4+9//DsBVV11V5etWrlwJwPDhw3e4/44dO9ZKnZJU15gAJClSmSeA+fPnA8nIv2fP
      ngDceOONAJx00klVvq5r164A3HPPPVU+P3nyZACWLFlSe8VKUh1iApCkSGWeAC677DIAzjnn
      nBq9rmHDhgC0atWqyuermz0kSdrOBCBJkbIBSFKkbACSFKnMzgEUFRUBUFy8ez0ovL62tpOk
      2JgAJClSmSWAmTNn7tbrrr322l3a7tJLL03dSpLSTACSFCkbgCRFygYgSZGyAUhSpGwAkhQp
      G4AkRcoGIEmRKqqoqKjIughJUu6ZACQpUjYASYqUDUCSIpX5L4JJUiHrVjYm6xI+s3zKDTXa
      3gQgSZEyAahOyZfRWHUjsXyoL59rg8KtrxCZACQpUjYASYqUDUCSImUDkKRI2QAkKVKZzwIq
      Ly8HYNOmTQA0b94cgOLimvWm999/H4AmTZoAsM8+mX80ScprJgBJilRmw+Rp06YBcO+99wKw
      ZcsWAPbbbz8AvvrVrwJw3XXXAdCyZUsgSQy/+c1vAHjkkUcA2LhxIwCNGjUCoEePHgCMGjUK
      gC9/+ct766NIUkEyAUhSpHKeAN566y0A7rjjDgCGDRsGwMCBA4FkJD9jxgwgSQYhAUycOBGA
      CRMmAHDxxRcD0LdvXwC2bdsGwNy5c1OvlySlmQAkKVI5TwBr164FkmP53/nOdwA46KCDAGjf
      vj0Ahx9+eOp1YWQ/adIkAM4991wAhg8fXuX7dOvWrfaKlqQ6yAQgSZHKeQLo0qULkMzXv/TS
      S4FkRH/KKacAyWygYM2aNUCSBL71rW+lnv/3v/8NwH/+85/U4wceeCAAzZo1q50PIEl1hAlA
      kiKV8wSw//77A/CLX/wCgHHjxgFw9913A/Dzn/8cgIsuughIjvGvX78+tZ/S0tLU/XvuuQdI
      Zv8EP/3pT4FklpEkaTsTgCRFKrOVwIceeiiQzOt/4403gGSWT0gIYbuwDiBYt24dkFw76NZb
      bwXgww8/BODMM8/cW6VLUp1gApCkSOU8AYT5/5Wv9tmhQwcAbrnlFgAWLVoEwCuvvALAkCFD
      ACgpKQGSlcLXXHNN6vFwW69evb3zASSpjjABSFKkcp4AZs6cCcCsWbMAOPvsswFo3bo1AHPm
      zAGS3wfo3LkzkFzls6ysDEjOFTRt2hSAk046CUjWCXz88cd77TNIUl1gApCkSOU8AYTr8k+d
      OhWAK664IvV8gwYNgGT+f+/evVPPX3LJJQBUVFQAMHnyZAAeeOCB1HYdO3ZM3UqS0kwAkhSp
      zBLAQw89BCTH7MM1fA444ACg+lk84fHLL78cgJEjRwLJSuF9990XSGYDSZKqZgKQpEhlthI4
      CLN7wm1NFRUVAV9cKSxJ2jETgCRFygYgSZGyAUhSpGwAkhQpG4AkRaqoIiyplSRFxQQgSZGy
      AUhSpGwAkhQpG4AkRcoGIEmRyvxaQFJt6lY2JusSAFg+5YYqH8+H+vK5NrC+PVFdbdUxAUhS
      pGwAkhQpG4AkRcoGIEmRsgFIUqRsAJIUKRuAJEUq5+sALr/8cgCWLl26S9ufccYZAAwYMACA
      ESNGAPCXv/wFgBYtWqS2f+211wAoKysDYOrUqQC0b99+D6qWpLrHBCBJkcp5ArjmmmsA2Lx5
      MwCvvvoqAOPGjQNg7NixADRv3hyA0tJSADZs2ABA+PmC8vLyHb7Prm4nSbEyAUhSpHKeADp1
      6pS6X1yc7kHdu3cHoHXr1qnHQwKQJNUOE4AkRapgrwa6YsUKAJo1a5Z6fO3atVmUI0kFxwQg
      SZEq2AQQZhNJknaPCUCSIlWwCWDy5MnAF1cCr169GoCRI0fmuiRJKigmAEmKVMEmgLBCONwG
      W7ZsyaIcSSo4JgBJipQNQJIiZQOQpEhlfg6gqKhoh/f3dH+SpKqZACQpUpkngJ49ewKwbNmy
      HW7Xq1evXdquY8eOu7SdJMXOBCBJkbIBSFKkbACSFCkbgCRFygYgSZGyAUhSpGwAkhSpooqK
      ioqsi5Ak5Z4JQJIiZQOQpEjZACQpUplfC0iqDd3KxmRdQsryKTdkXUKdke9/23yqr6b/7kwA
      khQpE4CUQ/kwWqxulJgPtYHpKZdMAJIUKRuAJEXKBiBJkbIBSFKkbACSFCkbgCRFKufTQC+/
      /HIAli5dukvbn3HGGQCsWbMGgDZt2gAwevTo1HYLFy4E4OqrrwbgggsuSL1f8Otf/xqAxx9/
      HIAnn3yyRvVLUl1hApCkSOU8AVxzzTUAbN68GYBXX30VgHHjxgEwduxYAJo3bw5AaWkpANOm
      TQNg7ty5Ve73n//8JwBNmjQB4KWXXqpyu+XLlwNw6KGH7sGnkKTCZwKQpEjlPAF06tQpdb+4
      ON2DunfvDkDr1q1Tjx922GEATJ48GYAtW7YA0LRpUyBJAIMGDQLgiSeeAKC8vDz1PitWrACg
      rKxsTz+KJBU0E4AkRapgLgbXo0cPAMIvWIaR/NFHHw0kx/bDOYaQAFavXg0k5xTefvttIEkU
      khQrE4AkRapgEkCYDXTggQcCyYi/ZcuWqe06duwIJLN8wmygAw44AID69esD0LVr171csSTl
      NxOAJEWqYBJAEI7dh5F9SAbdunUDoKioKHW/8nZdunQBoEGDBjmqWJLykwlAkiJVcAkgzAZ6
      6KGHgGRkX3lWT0gAEyZMAJJzBc7+kaTtTACSFKmCTQAbNmwAYM6cOQDcdNNNqe1CAli1ahWQ
      zP8/9dRTc1GmJOU9E4AkRSrzBBBm7VR3v7KvfOUrADRs2BCAjRs3Al88tt+qVSsgWQG8fv36
      KreTpFiZACQpUpkngJ49ewKwbNmyXdp+n322lxx+AWxnZs6cuXuFSVIdZwKQpEjZACQpUjYA
      SYqUDUCSImUDkKRI2QAkKVI2AEmKVFFF+JFdSVJUTACSFCkbgCRFygYgSZHK/FpAUm3oVjYm
      6xJSlk+5IesS6ox8/9vmU301/XdnApCkSJkApBzKh9FidaPEfKgNTE+5ZAKQpEjZACQpUjYA
      SYqUDUCSImUDkKRI2QAkKVI2AEmKVM7XAdx9990ALFy4EIDp06dXud1HH30EQL9+/QC46qqr
      AOjUqRMAI0aMAODggw8G4PHHHweguDjd04YOHQrA6aefnrovSbEzAUhSpHKeAI477jgAHnvs
      MQDWrFkDwCGHHJLa7vnnnwdg69atABx77LEAvPvuuwCEnzFYv349ALNmzQLgm9/8ZpXvW15e
      XjsfQJLqCBOAJEUq5wngiCOOAKCkpASAxYsXA19MAIsWLQKgc+fOALRp0wZIEkBw1llnATBp
      0iSg+gQgSUozAUhSpHKeAOrXrw/AMcccAyQJYMiQIantQgLo27fvDvcXZvWEWUALFiwAoE+f
      PrVUsSTVTSYASYpUZr8HEGYDjR07Fkjm/W/cuBGA119/HYAbbtjxtcGbNWsGwKBBgwCYOHEi
      YAKQpJ0xAUhSpDJLAGGEfuuttwLJvP+1a9cC0KJFCwC6d+++S/v77ne/C8DAgQMBeO6552qv
      WEmqg0wAkhSpzBJA8+bNgWSEH2b9hATQu3dv4IvX9qlO69atATj11FOB5FyAJKlqJgBJilRm
      CSAIs4FmzJgBwLp16wC4+eabd2t/559/PgCDBw8GoFGjRntYoSTVTSYASYpU5gng+OOPB+D+
      ++8HoEGDBkCyUrim2rVrB8CJJ54IJFcJlSSlmQAkKVKZJ4DwC19/+9vfAKhXrx6QXC20sl69
      egGwbNmyHe73zjvvrK0SJalOMgFIUqQyTwBBWBcgScoNE4AkRer/mGlUmb7/vm0AAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Pareto Chart' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdWWwdZ5rY/X8tZ9+4ijslLtqphVrckrVYLctuu78ez9KNQc83DcxkucgA
      k1zkJrkKpm+SiwAJECQXmQRpoBEkM/MNMDPdMwm63YtatmXLlEWJ1EJx3xdxJ89+qur9Ltg8
      LVqSTVkk65B8fsABzynWOXyqWKeeepd6X00ppRBCCLGraJqm6W4HIYQQwh2SAIQQYpeSBCCE
      ELuUJAAhhNilJAEIIcQuJQlACCF2KUkAQgixS0kCEEKIXUoSgNhWlFI4joPjOKznHkalFJlM
      BsdxXvlvO46Dbduv/DlCFArT7QCEWC/btnn48CG9vb2YpsnRo0dpbGz8wvdks1l++MMf8vu/
      //vEYrF1/Z3JyUk6OzvzrzVNo6GhgVQqxdzcHJcvX36l7RCiUEgCENtGR0cHf/7nf87+/ftJ
      JBL8/Oc/51//639NZWXlC99j2zbXr1/nW9/61roTwOLiIh0dHTx8+JBMJsOpU6cIhUIEAgGy
      2exGbY4QrpMEILaFXC7HP/zDP3D8+HH++I//GMuy+Hf/7t/x/vvvc+XKFX7yk59w+vRpbt++
      ze/8zu8wODjIj3/8YwAsywJgYGCAH/zgBySTSb797W9z8uRJfvGLXxCLxejq6uLw4cNcuHCB
      5uZm/uRP/oT/+T//JwsLC/yzf/bP8Hg83Llzh+XlZaampvjRj35ENptlcHCQs2fPMjo6yvT0
      NN/97ndpaWnh3r17/NVf/RWO4/BP/+k/Zf/+/fzgBz/g8OHDnD9/3s1dKUSetAGIbWFpaYnJ
      yUkuXrxIIBAgEolw+vRp+vr6mJ+f5xe/+AX/43/8D7xeL+l0mn//7/89jY2NXLhwAV3Xicfj
      /Of//J+pq6vj9OnT/PCHP2RmZobOzk7+y3/5L4yMjFBcXAyAYRgEg0E8Hg+maeafj4+P8/jx
      Y5aXl/noo48IhULU19fzl3/5l1RVVRGLxfjZz37G9PQ0f/7nf87Ro0c5evQo/+k//Sfi8TiZ
      TIZcLufynhTiN6QEILYVTdPWPF9tCLZtm+9973ucPXuWO3fuUFJSwh/8wR9g2zY//OEPmZyc
      ZGpqiqNHjxKPx5mammJpaQnbtmlpaeFP//RP111FBBAMBvnd3/1durq6mJ6e5pvf/Ca3bt3i
      s88+Y25ujvHxcZLJJIFAgPn5eSYnJ/mTP/mTDd8fQrwKKQGIbSEcDhOLxbh//z5KKZRSdHV1
      UVVVBUAkEuHs2bPouk4ul3tubx1N0/D5fOzZs4fvfve7xGIxPB4PJ0+eJBqNvnKMq8lJ07T8
      3yoqKuJ73/sepaWl+biFKBRSAhDbgs/n49133+W//bf/hlKK+fl5ent7+f73v8/8/Dy6rqPr
      K9czBw4cYHFxkR/84AfEYjFs26a6upr9+/fT09PDhQsXmJ2dxTAMNE1D1/U1JYv1+KL1S0pK
      aGxsZHJykrq6OhYWFrAsi//wH/4DJ0+e5M0333ylfSHERjH+7M/+7M/cDkKI9aipqSEWi9HT
      0wPAd77zHQ4dOoRSimAwyKFDh4CV6plYLMbo6CiBQICjR4/S2trKoUOHmJ6eZnR0lOLiYg4f
      PozX66Wuro7S0tJn/p5SioqKCurr6/Ovy8rKqK+vx+fzceDAAUzTJBwO09DQgGEYFBcX09TU
      RENDA9PT04yNjVFdXU1zczMLCwtUV1d/Ya8lIbbK97///e9rMiOY2E6UUuRyOTRNwzTNF16J
      r65nGAaGYeSXr97M9UXv3Si2beM4Dh6PZ1P/jhBfhaZpmiQAIYTYhWRKSCGE2MVe2Ag8MDAg
      454IIcQO9sIqoJ14w0p/fz8NDQ2bXvcrhNiZent7aW5udjuMDeH1erUXlgB2YsPVasPhandB
      IYR4GZqm7ahzo5wJhRBil5IEIIQQu5QkACGE2KUkAQghxC4lCUAIIXYpSQBCCLFLFUQCsG2b
      ZDKZn7lpleM4pFKpNRN6O45DOp2Wm9SEEOIVuToctFKK4eFhrl+/jmmaWJbF+fPn2b9/P48e
      PeLTTz/FcRyCwSDf/OY3CQaD/PjHP2ZxcZFoNMo3vvENvF4vn3zyCcePHycajXLv3j1yuRxn
      z551c9OEEKLguT4fQFlZGd/+9rcJhUIMDg7y4MEDampqSKfTfOc73yEcDvPBBx9w7949dF2n
      vLyc3/md3+HmzZu0t7fz2muvMTc3Ry6XY2hoiN7eXhlvXQgh1sHVKiBN0wgGg5imydTUFL29
      vRQXF+P1ejl16hThcJhkMsnMzAylpaUMDw9z5MgRNE3j8OHDjIyMACsliaWlJdrb2zl8+PBL
      Te0nhBC7leslAMdxuHPnDm1tbfj9fn77t387f6v1zMwMP/nJT9i3bx/Nzc3cvn0bn88HQCgU
      IpVKAbC8vMyPfvQjysvL2b9/f36oB8uy1rQrrLYpyFhAQoivYqeNnu96AtB1na997WucOXOG
      u3fv0tbWxtWrV1leXub69escP36co0ePous6hmHkT+irE24DRKNR3njjDW7evEl/fz8HDhzI
      r//0ZCC6ruP3+2UsICHEV7LTLh5dTQCO45BIJPD5fHg8Hurr6xkfHyedTtPR0UFjYyNHjhzJ
      n7Crqqro6enh9OnT9Pf3U1FRkf+sYDDI2bNnaW9vZ8+ePZSUlDz3n7U6YbcQQux2rvcC6u7u
      5vHjxwSDQWZmZti/fz/hcJjOzk6Kioro7e3FMAyOHTtGa2srf/d3f8fAwADxeJx3330X+M1J
      vb6+nomJCT799FPeeecdNzdNCCEKnqtTQiqlsCyLVCqVr9IJhUIYhkEqlUIplb9a93g8mKZJ
      MpkkkUgQDAYJhULAytwFq8M8W5aFbdv5toKndXd309zcLFVAQoivpKuri0OHDrkdxobQNO3F
      8wFsUQB4PB48Hg/RaHTN74LB4HPfEwqF8if+VV6vN//cNE1M0/WmDSGEKHhyKSyEELuUJAAh
      hNilJAEIIcQuJQlACCF2KUkAQogXUsrZcXe/it+Q7jJC7FCziRyJ7FcfNt2jMpQvtKObfhzd
      g62bOJqJg4Gl+3A0A4WWf25pXmzN88znVEa9eI3dc63pOM6aruar3d0Nw1iz3HEcbNvGNE00
      TUMplX/vavf31eS7WTevSgIQYod6MJVkYC79ld7rsZMcXLhO0dxPMbBx0LF1769P8iZZI4it
      eVBoZI0QtmaS0wPkdD+W7l1JFJpJxghTXFeCGY6A6QXDC54QmukFXwxNN748mG3Ctm3Gx8fp
      7Ozk2rVr+e7pnZ2djI2NYRgGFy5cIBQKkUgk+Pjjj8nlctTW1nL48GGmpqbo7OzE7/dz+fJl
      dF2nvb2d/fv3E4lENiVmSQBCiLWUojw9QNPSx9i6B6UMNGVjODkMsgAErfn86r++Vs0/d9BR
      moZCx9Y8eOcNLMMDmg66DvrKc83wguFB84bBGwbTjxYsA08AdB0tVAaeIJq/CPxFsOYq+Knn
      z1m+1cO9OI5Dd3c3XV1dDA4O8sYbb+D1ellaWuLOnTtcvXqV0dFRbt68ybVr1/joo4+IRqNU
      VVVx8+ZNSktL6e7upqysjImJCYaGhvD7/YyOjnLs2LFNi1sSADCfskjn3J9hLOQ1iPrlXyLc
      ZToZqhP3CVoLPCh+iwcl76A0Ha+dxOskMZ0Mwdw8ppNBxyZoLeBx0gTsJXzWMrqy0XDQUJhO
      Fo8XNGWBY0M2CUqBslFWBlCsu4XBDKyUInTPSqIwfWj+GJh+8PjBH0Mz/WjhCihpQvOGvvwz
      N4imaRw6dIhDhw7xv/7X/8ov7+zs5MSJE9TX11NbW8t//+//ncXFRebn57l48SLBYDA/FH4u
      l6OmpgbHcZicnCSdTtPS0kI6nX6m+mijyNkG6JxIfOWi8kY6UhHkbN3mFPWEWK9YdpKaeCcA
      U8GD2PpKVUbajJJm5Y79Of/eF77fcLLoykZXFj4nwdWGEBE9A3YWlVkG5YCdhcwyysmBlV55
      2LmV39tZUM5vnmcTkEuClVp5ACo5s/LzuQH4ME7+vxgH3t24nfJrSimy2Wz+ta7r+Tr854nH
      41RXV+fXDYVCLC4uEgwG8yf0SCTC0tISwWCQW7dusbS0xMGDB1FK8eDBAwzDoKWlhfr6+g3f
      HkkAQog1GpY/JWgvEjdLWPBWv/T7bd3Lank6QwSnqBQ98PxTjVIOONavHzbYmZWfCpSdWVlu
      51aSRy61khCc3EoCsNKQWkRZabAyqPRCPplo0dpX2AMvpmnamiHmv6yqyTCMNfOXrzb6Os5v
      elc5joPP5+PYsWMMDg5imiYTExPkcjlisRihUIi+vj6qq6s3fJgbSQBCiLxQbpbGpY9x0Ogu
      eoOs8fwxuTaKpukrDcPG6nhevykBf/7UurY7qnrqx3OWa5vXuPx0AvgyVVVV9Pf309jYSCKR
      IJvNUlZWRiKRIJVK4fP5GBsbo6amhmg0yvHjx7l79y7FxcXMz89TXV2N1+tlcXERy7IkAQgh
      NofuWNTF76Ipm2XPHp4EmlGbeCJ9WdrzGoELZGoPx3EYGBhgenqaqakpbt++TVVVFXv37uX2
      7dvcvHmTJ0+e0Nrais/nY//+/dy4cYPS0lJmZ2c5d+4cmqYxOztLX18f7733Hn19fdy/fx+f
      z5efKnejSQIQQgAQtOaoi98FNCZCR1jyVrod0rYSCoWwbZu3334bj8dDOBzG7/dz7do1njx5
      wsGDB9m/fz8AJ06cIBwOk0qluHz5MuFwGFgZ9v7SpUt4vV6amprQdR3btqmrq5NGYCHEJlEO
      Fakeotkp4p4yBiJn842/4svpuk5lZSWVlc8mzerqaqqqqtaUYLxeL4cOHcrPebL6u0gkku/z
      7/V6OXDgALB53Vp3z+15QogXCliL1MXv4XVSzAQaWPDXuR3SjqFpWv7u3qdP5E8vf3rZF73e
      aJIAhNjtlKI83Ud5qo+s7mcwctbtiMQWkQQgxC6n4XBo/peYKsuMv4Fpf6PbIYktIm0AYkuN
      LGTI2o7bYbAn7CHik8MfoCw1QGlmGEvzMhQ5g+PuTLFiC8l/Wmypz0aXWUy7P+zGxYaoJABW
      7to9sPgrAGb8DTwJNH1ubB2xkxXEN0Ap9Uxr+IuWv2hdITbLTCLHhwOLboeBoWv81pHSjftA
      pahMdlGe6ierBxgJnyRpFm/c54uC52oCUEoRj8cZGRkhk8ng9Xqpra0lGo2SSqUYHBwkk8nk
      u1cppRgYGGBpaYlwOExDQwO6rjM1NUVpaSler5eZmRkcx2HPnj1ubprYQWxHFUSpxdQ39oLH
      46SpjXfgt5eY8TcyEj6xMmKn2DVc/28vLy8zPT2N4ziMjIzQ3t5ONpvl3r179Pf3k81m+fDD
      D1lYWGB0dJTbt2+Ty+Vob29naGgIy7L49NNPWV5eJh6P8/HHHzM9Pe32ZglR2JQilh2nNDME
      wEj4OBlTBiLcbVyvAqqoqGDPnj3ouk5/fz/d3d3Ytk1PTw+/9Vu/RVFREZZl0dvby8TEBGfP
      nqWhoYGysjLu379PXd1Kf2XbtvO3TTc3N7u8VUIUNg2HqsRDItkp0kaE/ujrbockXOBqAlit
      xx8ZGeHx48f09/dz7do1AoEAyWSS4uKV+siKigoGBgZYWFigoqICTdOoqqrigw8+ACCTydDe
      3s74+Di/93u/h8/nA1gz4h78Zmq2z99SrZT7vVIAlONgWZbbYWyqQple1nmJff30aI7uUi91
      fHzRcR3OTrNv+TNA42Hx2+SMwAbE93y2bbPDD+tty/USAJAf5a6iooJ4PI5lWfk5Mlcber+o
      wddxHJLJZH6Y1VWrc2x+/vXnJ7kulEmvHaUK6GSzWQpkX/96Ptb1rlsIFC+XjL7ouK5KdRG2
      Zol7SpkKHtiA6F7MsW12ymFdKOeKjeJ6AtB1nebmZpqamhgZGaGjo4N9+/bh8XhIJpOEQiHm
      5+cJhUIEg0EWFxcJhULMzc3lB1AKBAKcP3+ehw8f0t7ezqVLl/B4PBiGsWboVl3X8Xq9z5QA
      dD0N5LZys5/LMIx86WWnKpSeW6Zprntfe7KFEbOG9lLHx4uO64C1wL6lNmzNYCx0bNN7/ni8
      Xnw7pMttoRy/G8XVRmDbtunr66O7u5vx8XEmJyfzEyY0NDTQ1tbG8PAwjx8/prm5mRMnTnDz
      5k1GRka4desWR44cyX+WYRicPXuWxcVFurq6XNwqIQqYcti31EYsO0HCLGUs1EJO97sdlXCJ
      620Auq7T19eH4zg4jsOpU6cIh8OcPHmSO3fu0NnZyalTpygrK6O0tJTp6Wk6OzvZs2cPjY2N
      6LrO/v37CQQCBINBzp07x+TkpJubJUTBCloLVKR6MJTFTKCBOV+d3Pi1i7maAHRdp6Ghgb17
      9+bbAVarZ4qLi7ly5QqO4+Tn3NQ0jfPnz2NZ1ppJkp8uCVRVVVFVVeXK9ghR0JRDeaqfslQ/
      jmYwHD5FbpNn/BKFrSAq5lbr5j/v83X4sFJq8Hg8WxWaEDuG10mxf/EGHpVhPHiEieAht0MS
      LnP9RjAhxNYoyoxSnh7A1kx6ii7JXb9CEoAQu4HppGlcugWsDPo276t1OSJRCCQBCLHTKUVx
      eoSKZDdZ3c9A9DVSRtTtqEQBkAQgxA7ncVLUx+/icxLM+huYDB6S6h8BSAIQYseL5GbYk+oB
      pZgONJIyi9wOSRQISQBC7GC6k6Mm0UE0O0XcWy7z/Yo1JAEIsYMFrUUaFz9BoTEWaiHh2cAJ
      ZcS2JwlAiB2sOnGfoL1I2owyEj7pdjiiwBTEjWBCiI3ns+M0LX6IAsZDR1jyVrgdkigwUgIQ
      YgdSjk3TwoeErFninjKGImewZNA38TmSAITYidKLxJYfoytbbvwSLyQJQIgdRjk2ztR91MIw
      Od3PSPiEXP2L55IEIMROk1nCGf0UMks8CTQzFjrudkSiQEkCEGKHceYHUU8eYWkeHhddkfH+
      xQtJAhBih3GGb0J2mSVvBYu+arfDEQVMEoAQO4gz/Rg12gaeEIMlV8jqAbdDEgVMEoAQO4Sy
      LZyB62Bl0Ir3kok1oTTjS98ndi9JAELsEGphCGemG3QdrfwwWlhu/BJfTBKAEDuAsjI4I7dg
      aRSCZej7LoIhU6eKLyYJQIgdQC2NrzT+KoW+9wJ6tMbtkMQ2UDAJIJ1Ok81m86+VUmSzWZLJ
      JEqp/HLHcUgmk9i27UaYQhQkNdsNiSdg+jH2XXI7HLFNuDoYnFKK2dlZrl+/TiKRIJPJcObM
      GU6cOMG9e/fo6OjA4/Hg9/t5++238Xg8/OhHPyKdTuPz+XjnnXcIBoPcuHGD06dPE41GaWtr
      Q9M0XnvtNTc3bdMppUhbjtthoGsaPrNgriN2JZVawOn5KcBK1U9Qhnx2i1IKpRS6rj+zTPv1
      /Riapq1Ztvp6lbaF9224PhqoZVmcPXuWuro6xsbGaG9vp6mpibt37/Lee+9RVlbG9evX6erq
      IpVKUVdXx7lz5/j000+5e/cu58+fJx6PY1kWAwMDjI2NcfXqVbc3a9NZjuKv7s24HQZ7wh7e
      PVTidhi7lnIsnIm7qKUxCJWjN7yBZnjdDmvXUUqxvLzM8PAwmUyGsrIyamtrMQyD+fl5hoeH
      UUrR2NhIJBJhdHSU2dlZKioqqKqqwrIsJiYmqKqqwuPZurYbVy/dNE2jsrKSvXv3AjA8PEwg
      EMDv91NZWcmDBw949OgRMzMzVFRUMDo6yqFDh9A0jQMHDjA+Pg6sVAstLCzQ3t7OkSNHiEZl
      wmuxS2SWcUY+ATT0qla0WL3bEe1Ktm3T3t7O5OQkAG1tbYyNjQFw/fp1FhcXWV5e5vr168zN
      zXHnzh0WFxdpb2/PJ47u7u41JYGt4HoJQClFLpfjww8/ZHp6mmvXruH1eqmsrKStrY2RkREA
      ysrKsCwLr3fl6iYYDJJKpQCIx+P86Ec/oqKigsbGxnzxK5fLrWkrWG0/eLp4BmBb1lZs6pey
      cjmSyeS61s3ZW3ugvIhtO+uOGcBxCiPubCZLMrm+WNLpwjg+lFJr97VSaBMd6LO94AmQi+4j
      m1OQW1mnUI7rdCpFUu2M+xFedILO5XJMTk7y9ttvU1RUhGEY9Pf3E4vFiMfjvPfee2iaxt/+
      7d/S3d1NLBajtbWVzz77jLm5OTo6Orhy5Qqmaa6pLtpsrieAdDrNBx98gGVZfOc738EwDBzH
      4bPPPuMP//APCYfDtLW1cfv2bUzTJJvNEgqFSCQSBINBAKLRKG+++SYfffQRjx8/5ujRo+i6
      jsfjWVOc0nWdYDD4TAIwzBzg/pfF9Hjy2/RlcrYDxDc3oHUwDH3dMQPo+vqTxWby+rwEg+u7
      S9ZvZ4HU5ga0DpqmrdnXKjWPNf4pKrOEvvcivoPX1qxfKMe1PxAgGHD9VLMhNE1bc1GpaRq6
      rqPrOoZh0N3dzd69e1laWiKTyTA7O0t5eTmmubL9paWl+RqL3t5e4vE4PT091NTUcPv2bYqK
      ijh+/Dg+n29LtsfVKiClFKOjo2QyGd544w0Mw8gvz2az+RO1aZqk02lqamp4/PgxSil6enqo
      rKzMf5bP5+Ps2bN0dXUxNzfnyvYIsVWUUqjFUdSTB2D60KplusetoJTCcZw1DwCPx8OJEycY
      HR2lra2NgYEBHMd57pV8SUkJzc3NTE9PE4vFCAQCjI+P4/F46OvrY3p6esu2x/VeQJOTk9y/
      f5+pqSkAqquruXz5Ms3NzfzFX/wFgUCAbDbLW2+9RTgc5q//+q95/PgxlmXx3nvvAb9pNa+t
      rWVycpJPPvmEb33rW65tlxBbwX78f1aqe6LV6FWtboezK2ia9txGWk3TaGpqorKyklwuR19f
      H8lkkuLiYqanp/NVR/Pz8zQ1NVFbW0tjYyOdnZ2UlpbS19fHO++8w6effsry8vKWbY+rCUDX
      dS5dusSlS8/2W3777bfJZDLkcjnC4XD+JP9Hf/RHJJNJAoFAvli1mggAzp07tzXBC+EitTCI
      Gv8MdBPj4LfAG3I7pF1vfn6eZDKJZVkMDg5y4cIFioqK8Hg83Lt3D9M0SSaTVFdXo2kaMzMz
      LCwscObMGXp6enjw4AHT09M0NjZuWcwFWzGnaRp+vx+/f+1MRoZhEIlEXIpKCPcpO4vT9X8A
      0Eqb0SuOomlyL4ablFL5en2AkydP5quoL126xIMHD3Ach2vXruWrui3L4vjx45imyZkzZ7h9
      +zY1NTWUlZVtWdwFmwCEEC8Qf4Ka6wXNQK9ogVC52xHterqu09jYSF1dHbqu52snAGpqavLJ
      YPXkD6y50i8vL+cb3/hGvlF5q0gCEGIbUbkUdvf/RS2No5U0ojd+HU2Xr3Eh0DQt303988uf
      TghPL3/6+dPJYatIuVGIbUOh4pOo+UFAoVefQpOrf/EKJAEIsV0ohZrpQS0MgSeE3vyW2xGJ
      bU4SgBDbhG6nsXvfBzuHVnUSLVDkdkhim5MEIMQ2UbN8FxaGIFiCceS33Q5H7ACSAITYBgwn
      Q8Ny20rPn/LDaH65+hevThKAEIVOKfYtf0ZxZgS8wZVhH/wy4q14dZIAhChwfnuZ6sR9vE4a
      rXQ/etVJufFLbAg5ioQoZEpRluqnPNUHurky4YtPrv7FxpAEIEQBM1SOPalefE6SlKcEvea0
      2yGJHUQSgBAFrDgzwsHFX+Ggc7fsPZnuUWwoSQBCFCjDyVKTeADAnL+eOZ9M9yg2liQAIQpU
      NDtFbfwetmYyHD5Fyoy5HZLYYSQBCFGANGVRG79HyJpj0VvJdKARpe2MeXVF4ZAEIEQBiman
      qE4+RFOK8dBR5vx73Q5J7ECSAIQoNMqhLD1ILDNByowyGTzkdkRih5IEIESBCVqLHJ7/GQYW
      Y6EWpv1NbockdihJAEIUmMpkF5HcDFk9wHCkFZ6aOESIjSQJQIgCYtpp9i9+AMB46CgL3hqX
      IxI7mSQAIQqFctiT6iWcmyGjhxgJnyCnB9yOSuxgBZMAcrkclmWtWaaUIp1Or1nuOA7ZbBbH
      cbY6RCE2lc+Oc2DxV3icFJPBA0wFDkr1j9hUrs4mrZRieXmZ27dvs7CwgG3bnDp1isbGRpLJ
      JG1tbSwtLWGaJq+99hrFxcVcv36dxcVFotEoFy9exDRNOjo6OHDgAOFwmMePH2NZFkePHnVz
      04R4KZpyKE0PE87NYOl+xkLHyBly9S82l+slgIWFBYqLi7ly5QpHjhzh4cOHxONx7t27h6Zp
      XL58mddff51IJEJnZye5XI6rV6/iOA4PHjzAcRxGRkbIZDJMTU3R2dlJcXGx25slxEsxnfTK
      jV+5WRa9lYyET7odktgFXE0AmqZRX19Pa2srxcXF2LaN1+vFMAweP35MTU0N8/PzKKXwer10
      dXVx5swZioqKOHXqFL29vcBKSSKRSNDW1kZjYyOVlZVubpYQLy2Sm6E6+RClGQxGzuLoHrdD
      EruAq1VAqxzHoaOjg0ePHnH+/Hn8fj/j4+M8fvwYj8fD4uIiFy5cIJvNEgisFIvD4TDJZBKA
      RCLB+++/j9fr5c0330TXV/KaZVlr2gocxyGdTud/v8q27S3a0i9mWxbpdHpd6+YctcnRrM/q
      Pl0vpQoj7lwuRzq9vvr1bNb68pVeUcPSLQL2EgveKobDrc9dZ7VNbL0K5bjOZjKktc3fh1uh
      UI7fjeJ6ArBtmzt37tDX18dbb71FSUkJmqZRWlqaTwaPHj3i/v376LqeP6Hncjk8npWrpEAg
      QEtLCx0dHczMzFBbW4umaRiGseZkr2kaXq8X7XMNa59PCG7RDSO/TV+qQBKApmnrj/nX6xcC
      0zDXHbe5yd8Sv7VIXfwuOc3LaPgElu577nqaxkvt60I5rk2PB49nZ4xjVCjH70ZxvRF4eHiY
      oaEh3n33XWKxWH55WVkZy8vLFBcXE4vFePLkCeXl5QwODtLS0sLg4CDl5eUAGIZBTU0NXq+X
      trY2otEosVgMTdPW/MM0TUPX9We+GIXyT11NWuvhUBi9oF4m5kKi6euPW9c373IC8BkAACAA
      SURBVEpaUzZH536Kz15mwVfDSPgktv6iMf9fbl8XynGt6/q2PEZ2A9cTwNTUFDMzM3zyyScA
      lJaWcvToUQ4dOsStW7cYGhpienqaY8eOEYvFeP/995mammJycpI33ngDIH+ib2pqYnx8nPb2
      dq5cueLilgmxPtHsFGXpfkBnOtDMsqfM7ZDELuJqAtA0jcOHD1NVVZW/Kvf5fHg8Hg4cOEAs
      FmN5eZmmpiYqKiowDIOrV6+ytLTEoUOHqKqqQtM0Ll68SCQSwePxcP78+XzbgBCFTFMW1YkH
      xDITpI0wg5HT2C+o/hFiM7ieAGKxWL7q5/Pq6uqeWVZdXU11dfWaZSUlJfnnwWCQYDC4sYEK
      sQnCuVnq4ncxsJkMHWLOv8/tkMQuUxitRELsQuWpPkozw1ial0dFb7odjtiFJAEI4QKPnaQ2
      3gnAWOgoCU+pyxGJ3UgSgBAuqEh2U5l8RNoI0xe7gK3JjV9i60kCEGKLmU6K+ng7GorJwEEW
      vNUy6JtwhSQAIbZYeaqfsnQ/lu7lSfAAGTPidkhil5IEIMQWMu00NYn7BK0FZv17mQwecDsk
      sYtJAhBiqyhFcWaU+uV2NGAk3EpCbvwSLpIEIMQWqo/fweckSJjFjIVa3A5H7HKuDwYnxG4R
      tOZpXPoEB52e2EXShtT97zRKKRzHQdf1/FhMSqn8KKKrw9asLnv69aqtHMNJEoAQW0BXFs2L
      H2KqHLO+esbCx0GTAvhOoZQiHo8zMDBANpslFAqxb98+AoEAc3NzDA4OopSiubmZaDTK8PAw
      s7OzVFRUUFNTg2VZjI2NUVNT81Ijvr4qOQKF2ALB3Dw1ifs46EwGDxI35cavncS2bTo6Ohgf
      H8fj8dDf38/Dhw9RSnH9+nWSySSZTIbr168zNzfH3bt3SSaTdHR0sLy8zNDQEH19fVsetyQA
      ITaZ4eSoj98hlJsl4SllLHRMZvzaYZRSJJNJ6uvrOXz4MNXV1SwvL7O0tEQymeT8+fOcO3cO
      x3F4/PgxsViM48eP4/P5mJ2dpbOzk1OnTqHr+pZOOiNVQEJssoC1QFXiEabKMhE8zGygwe2Q
      xCuwrN/MbrY6v4hpmtTX13Pjxg16e3uZnJzkW9/6FgsLC5SVlWH+elahkpISlFIsLCzQ3d1N
      IpGgt7eXmpoaPv30U4qKijh58iQ+39aMCislACE2k1KUZIYozoySMmL0xi64HZF4BauNt08/
      YGVq1IWFBRoaGmhoaKC+vp6ZmZk166wqKSnh4MGDLCwsUFRURCAQYGxsjEAgwMDAANPT01u2
      PZIAhNhEK42/NzFVhkVfFYu+6i9/kyhYq1Ogrj5WZzrL5XKMjo5y/PhxWlpaOHDgAJOTkwSD
      Qaanp/OJYG5ujkgkwuHDh3n99dfxeDxUVlaytLTE2bNn81VHW0WqgITYRDWJ+1SkekgZUR4V
      X3M7HLFJDMMgFArR09NDKpVicHAQv99PaWkpPp+P9vZ2TNMkk8lQXV2NpmlMT0/nT/w9PT10
      dnYyPT1NU1PTlsUtJQAhNonhZGla+hgHnZlAA0veCrdDEpvENE1Onz6Nbdv09fXh9/s5efIk
      hmFw6dIl5ubmmJiY4M0338yXGpRSHD9+HNM0OXPmDPPz89TV1VFWtnV3h0sJQIhNUp14QHF6
      hKwRZDR0XG782sE0TaO8vJzS0lJs28Y0zfwNXdXV1VRUVKBpWn7qW4B9+/bln5eVlXHt2rVn
      1tlskgCE2AReO0Fd/C4+J85U4ACTwYMozXA7LLHJVnsFPU3TtHwvoM8vf/r5aslgK0kVkBAb
      TSnKUgNUpHpQ6AxGz5I2nz/vtRBukgQgxAYzVI698c/w28sseSsYCZ9wOyQhnsvVKiClFLZt
      s7S0RDweB1bqwgKBQH6ApPn5eWzbpry8HKUUs7OzxONxgsEgpaWl6LrO8vIywWAQ0zRJJBIo
      pQiHw25umtjFijMj1C/fwcagq/hNLD3gdkhCPJfrJYCpqSlu3LjBgwcPuHnzJp988gnZbBaA
      +fl5fvrTn/I3f/M3ADx58oSf/OQndHV18f777zM+Pk4ul+P69essLi6SSqW4ceMGPT09bm6S
      2MV0J8eh+V+g4zATaGQyeNDtkIR4IdcbgaPRKG+88QZFRUWMjY1x9+5dMpkMuq5z//59Ghsb
      6ezsBODOnTucOnWKQ4cO0dXVxf3796moqMjfZPH48WMcx+HgQfnSCXdEctOUZIaxNYPx0FHp
      +SMKmqsJQNM0IpFIfijVO3fuUFJSQigUYnh4mEQiwfHjx7l//z4AMzMzXLp0CU3TqKur4/bt
      28DK2Bx9fX10dXXxzjvvEAisFLk/fxv26ljdn7eVgy99oRfE9zyOUxgxK8W6Yy4kLzoWnsdZ
      5/Fh2mkOLvySgLXIvK+O8eCRDe75s/6YV1YvkGPEcbblMbIbuF4CUEoxNTXFBx98QGVlJa+9
      9hqO43Dr1i2OHTuGUopcLkc6nc5PoAArN17Ytg1AJpPh4cOHeL1eQqFQfh3btvPrrP6tbDb7
      zIQLhXJw2rZNJpNZ17pWwSQAZ90xr6xfGHFbOWvdcedy9pevpBRF2XFK00ModEbCJ1jyVb1i
      lM/8iZfa13aBHNfZXI6Mvo59uA0UyvG7UVxPAAsLC3zyySc0NTVx8uRJdF3nyZMnTE9P09/f
      T39/P1NTUzx8+BDDMIjH44RCIRYWFgiFQgCEQiGuXr3KvXv3uHv3LufOncM0zfxjla7r+P3+
      Z/rpGkYWyG3lZj+XYZr50suXydkOsHVjhryIruvrjhlA0xKbGM36ebyedcfts7LAF8etK4vq
      xAOi2SmSZhED0a9tQJRraZr2Uvu6UI5rn89HIOD6qWZDbOVsXVvB9V5AY2NjeL1empqaSKVS
      GIZBUVER3/ve9wDyM+Ws1uvfuXOHy5cvc+/ePRobG/Of5fF4OHPmDD//+c8ZGRmhoUGG3BVb
      J5p7QnXiARoOfbHXpd+/2BZcT8uVlZXous7ExASwcjVfWVlJcXExsFI9881vfpNQKMTJkycZ
      HByku7ubpqYm9u3bh67rfO1rXyMSieD1ennnnXdYWlpyc5PELrR/4QbF2TEWvNUMRF5zOxwh
      1sX1RuCysrIvHPxI13Xq6+vzzxsaGtZMpgwrSWRVNBolGo1ubuBCPKUkPURNopOs7udh8TVS
      ZpHbIQmxLq7fB/CyVgdL2ml1cWJ7MpwMjUu38NpJFnw1zPtqQY5NsU1suwQgRCEpzoxRkXyM
      0nQmgkdY9u5xOyQh1k0SgBBfke7kqEw+IpKbZslbyWj4mIz4KbYVSQBCfEWR3AzNizfRUIyG
      j7Pk3dh+/0JsNkkAQnxFtfF7BOwlUkaU0dBxt8MR4qVJAhDiK/BbizQvfYRCYzByhrhn66bx
      E2KjSAIQ4iVpyubAwg381hJL3gqGI63YutftsIR4aZIAhHhJ0ewk1YkHgMZE8BCL3mq3QxLi
      K5EEIMRL0JRFdeIh0ewkaTPCUOSMXP2LbUsSgBAvIZRboCr5CAObqUAzc/69bockxFcmCUCI
      l7An1U1FqgdL89Jd9Ibb4QjxSiQBCLFOHjtJ09LHAIyFWqTuX2x7kgCEWAdNOVQmuyhJj5A0
      Y/QUXcTWPG6HJcQrkQQgxDoErEX2Ld8GFBPBwyx4a2TQN7HtSQIQYh2KMyOUpoewdC8z/gZy
      RtDtkIR4ZZIAhPgSPjtOfbwdv73EVPDApkz3KIQbJAEI8QWUUgTjg1QlHmFrHkZCrTLip9gx
      JAEI8SW0gV/gcxIseqsYDx11OxwhNowkACG+gFqeQI19RkYPMhB9jZzuczskITaMJAAhXkDZ
      OezO/w+UzYKvmonQUdDkKyN2DjmahXgBNdePmuvF0jxMBQ6SlMnexQ5juvnHlVIopUin0yQS
      CXRdJxqNYpomlmWRSqVIJpOEw2GCwSCappFIJEgkEgQCAcLhMJqmkclk8Hq96LpONptFKYXP
      J0V18dUpK40z/DEkpkl4qxiOnMTRXP26CLHhXD+iJycn+eijj9B1neXlZfbt28frr7/O7du3
      GRoawuv1srS0xNe//nUikQj/8A//QCQSYXl5mWvXrlFWVsZPf/pTLly4QDgc5vr165SUlHD2
      7Fm3N01sU0op1NwAzuinoBxydZdY1irdDkuIDed6AgiFQnz961+ntLSUsbEx2tvbSafT1NXV
      cfr0aXw+Hx9//DEjIyOkUilaW1tpaWnh/v373L9/nytXruRLEt3d3WSzWY4cOeL2ZontTDkr
      V//JGQiUoDdchkHb7aiE2HCutgFomkYsFqO0tJRcLkdnZ2e+uqeurg6Px8P09DRdXV3s27eP
      J0+esG/fPjRNy78GsG2b8fFx7t69S2trK8Hgyl2aq4lh9fG8ZSvLlVu74BnPi+/5D7cj/Y31
      x1xIQX9B3MlZnIHrKEBvehN8Ubej/bX17+eCOq5fIuZCf+w0rpcAlFLMzs5y/fp1ioqKuHDh
      AqZpksvlePToEW1tbbz99tvU1dXhOA66vpKzPB4PuVwOgGQyyUcffUQ0GqWkpATt12O02LaN
      ZVn5v+U4Dul0Ov/7VbZdGFd3q+0e61rXKYyD0XGcdccMoAok7mwuSyr1nFgcG63nOoaVRgtV
      kCs/QTaT2foAn0MpXmpfF8pxnclkSJFzO4wN8VWSgFIK27bRNA1d19E0Lb/MMIz861WfPz9t
      JtcTwNLSEjdv3qS2tpbXXnsNXddRStHf3093dzff+MY3qKmpAcDn85FMJgmFQiwuLhIKhQCI
      RCJcu3aNO3fu0NHRwZkzZzBNM/9Ypes6gUAgn0RWGUYOsHCbaZr50suXydkOEN/cgNZB1/V1
      xwyg6clNjGb9vF4vwWDgmeVqeYLc2EegGeh1r+Epq8eX0gH349Y07aX2daEc1z6/n2DA9VPN
      hnjRydmyLNrb21lcXARWkm9VVRVHjhxhcnKSR48e4TgOJ0+epLy8nPv37zM1NUVdXR0HDx4k
      k8nQ3d3NwYMHt7QDi6tVQEopxsfH8fv9nDp1as2Juaenh2PHjlFdXZ3f6fv27aOjowOlFA8f
      PqS+vj6/vsfj4fTp0wwMDOSrhoR4GcrO4ozcgtQ8hMrRa8+gmX63wxLbgK7r1NbWsn//fpqb
      m7EsiydPnqDrOr/61a+oqqpi7969/PznP2dqaorBwUGqqqro7+9nYWEh//PpC9at4Ho30GQy
      SU9PD8PDwwBUV1dz6dIlpqammJiY4IMPPsA0TVpbWzlz5gw//vGP+cEPfkBRURHnzp1D0zRK
      S0vxeDyUlJTw2muv8eDBA6qrZbIOsX5KKVR8Cmf8DlgZ9NqzaGWH3A5LbBO6rlNVVQVAOp3m
      448/5s0332Rubg7DMDh6dGUIkd7eXrq6uohEItTV1TE1NcXk5CTd3d1cuXKFXC6XrybaCq4m
      AF3XOX36NKdPn37md//kn/yT577nvffey/f7N4yVQbkuXryY/31TUxNNTU2bE7DYuZSNmriH
      WhgCbxij+dqW1sWK7UEplW97hJUqoc9ftff19RGNRikvL2doaIiioqL8sRSJRPD5fIyNjXHr
      1i2SySQjIyPs2bOHX/7yl0SjUc6fP/9SVX2vYtvdCbxaj7968hdiQ9g5nNE2yKXQihvQIlVu
      RyQK0GpD7tOPp+VyOdra2jh//nx+3acb4x3HoaioiK997WuUlJRQVVVFNBplbGyMpqYmFhcX
      mZ6e3rLt2XYJQIjN4EzcRU13gT+G0fqHbocjCphhGPnH0wlAKcWDBw+oqqqiuLgYgNLSUiYn
      J8nlcliWxeTkJMXFxdTU1HDkyBHS6TS1tbWkUimam5spLS19qZ5er2pnNM0L8QpUNo7T8xPQ
      NPSKY2iBUrdDEttQKpViaGiI1tbWfJVPKBSitLSUGzdu5HvMlZeXo2kaIyMj+d5CtbW13Lhx
      g8XFRQ4ePLhlMUsCELueM34XNT8Evgha7Vnwhd0OSWxDhmFw5swZysrK1iy/fPkyg4ODKKXW
      9HYsKipiz549+ff19vbS2NhIaenWXYBIAhC7msosr4z5Y6XQq76GXnYATYZ8Fl+Bz+fL37P0
      tOLi4jUNwav27NmTfx6JRGhtbQV22Y1gQrhFKYUzdR812QG6B63uPFpQqn/ExtI07bkn9aeX
      udXjTC51xO5lpVFjtyGXhEgVemWL2xEJsaUkAYhdSy0M4Qx/ApqOcfAdNK/U/YvdRRKA2J1s
      C/vh34GTQys/hF51yu2IhNhykgDErqSmH6FmHoPpR69/HXwRt0MSYstJAhC7julk0IZuQDaB
      VtyAXnUCTZc7y8XuIwlA7C5KUZweIZocAt1Er25FC1e4HZUQrpAEIHYVQ+WoTXQQy02hhcrQ
      91388jcJsUNJAhC7SjQ7RU3iPgD6vktowbIveYcQO5ckALFraMqmNn6PSG4aLVqN3nTN7ZCE
      cJUkALFrRLJPqIvfxcaAfVdA+v2LXU4SgNg1qpJdhK1Z0maUTKwRzZCRUMTuJglA7AqR7BPq
      43cAGIh+jSf+ZpcjEsJ9kgDEjqcpi+rEA4oy4yTNGJOBgyiZ7lEISQBi5wtYS9TF72KqLNOB
      ZmYD+9wOSYiCIAlA7HjlqX5K0wMkzRgDkddwNKn7FwIKKAGszpn5NMuyyGazKKXyyxzHIZvN
      4jjOVocotiHDydIy93/RUTwJNDPr3+d2SEIUDFcvhZRSLC8vc/v2bRYWFrBtm1OnTtHY2Mjs
      7Cy3bt0inU7T2NjIyZMncRyH69evs7i4SDQa5eLFi5imSWdnJ/v37yccDvP48WMsy+Lo0aNu
      bpooEFXJR4Rys2T0IKOhE9hy9S9EnuslgIWFBYqLi7ly5QpHjhzh4cOHxONx2traqKys5OrV
      q/T09DA6OkpnZye5XI6vf/3rOI7DgwcPcByH4eFhMpkMU1NTdHZ2Ulxc7PZmiQLgteM0L3yA
      jsNU8ADTgSaQ6R6FyHP126BpGvX19bS2tlJcXIxt23i9XgzDYGxsjJaWFoqLizl06BCDg4N0
      dXVx5swZiouLaW1tpbe3F1gpSSQSCdra2mhsbKSystLNzRKFQDnUxjspyYyQMUIMhU+TNqNu
      RyVEQSmI8rDjOHR0dPDo0SPOnTuH3+/Hsix8Ph8AoVCIyclJstksgUAAWJlEOZlMApBIJHj/
      /ffxer28+eab6PpKXrMsa01bgeM4pNPp/O9X2ba9FZv5pWzLIp1Or2vdnKO+fKUtsLpP1+vp
      9pzN5LeXqU104HOSjAePMBU8uOb3uVyOdHp9XUGzWevLV9oCSqmX2teFclxnMxnSWmHsw1e1
      VcfvVnE9Adi2zZ07d+jr6+Ott96ipKQkP4my4zjouo5lWZimia7r+X9ALpfD4/EAEAgEaGlp
      oaOjg5mZGWpra9E0DcMw1pzsNU3D6/U+MwHz5xOCW3TDyG/TlyqQBKBp2vpjZusmvy5ND1GR
      fIwCuosukzMCa35vGua64zZd/5as0DReal8XynFtejx4PDtjvgW3Jm/fLK43Ag8PDzM0NMS7
      775LLBbLL49EIkxNTVFZWcnQ0BCVlZXkcjkGBgZoaWlhcHCQ8vJyAAzDoKamBq/XS1tbG7FY
      jGg0mk8kqzRNQ9f1Z74YhfJPXU1a6+FQGL2gXibmraI7OfYt38ZUOeZ8tUwFDjyzjqavP25d
      L4wraXi5fV0ox7Wu6wV3jIgVrieAqakpZmZm+OSTT9A0jZKSEo4ePcrBgwf58MMPKSoqYmFh
      gfPnz7Nnzx5+9rOf8eTJEyYmJnjjjTfyn6VpGo2NjYyPj9Pe3r7md2J3iWUnqYu3Y2smPbHL
      OJqcfIR4HlcTgKZpHD58mMrKyvxVud/vx+Px0NLSQklJCZlMhtOnTxMOhwmHw1y9epXFxUUO
      HjxIVVUVmqZx6dIlIpEIHo+Hc+fO5dsGxO5j2mmaFz8EYMa/j6nAfun5I8QLuJ4AYrFYvurn
      aaZp0tDQ8Mzy6upqqqur1ywrKSnJPw+FQoRCoY0PVhQ+5VCSGaYy2UVO9zMYOUvCKxO+CPEi
      cmkkdgyvk6I23kHAXmLBV8N4SG4GFOKLSAIQO0bQWqAi9RhDWcz4G0mbz5YshdjJlpaW+N//
      +38zPT0NwIMHD/j7v//7Z4bZWSUJQOwImnKoX/6MWHaSuKeUjtL/x+2QhNhyjuOQy+Xy3eVt
      217z+vMKpIezEK8mYC3QuHQLRzMZDrei5NpG7EIej4fDhw8DK8ng+PHjHD9+/IXrSwIQO0LD
      0qcE7CWWPHsYDre6HY4QrrBtm9u3b/PXf/3XVFVVcfHiRU6cOPHCGwglAYhtL5iboz5+B0vz
      Mho+TtxTvnLbrBC7TCQS4R/9o3/E4uIid+/e5S/+4i/4m7/5G/7Vv/pXRKPPjoUlCUBsa5qy
      aVy6RSQ3TdIsZix07JlhH4TYLWzbZmhoiN7eXkZHRykvL6e6uhrzBeOZSAIQ21ooN0dFqhtd
      Wcz4G5j31bgdkhCuWVxc5O///u+JxWLs37+fxsZGamtrJQGInUdTDlXJR5SlBrA0H91Fl7F1
      n9thCeGaWCzG7//+72MYRn7gy2QySSQSee7YUJIAxLbls+PsX/wAHZuh8Cnm/HvdDkkIVy0t
      LfFf/+t/RSmVP+EfPHiQ7373u89tCJYEILatmkQnsewkaT1Mf/S82+EI4bonT56QSqX45//8
      n+cTQCAQeOForJIAxLbktRPsX/wQBYyFW6TuXwigvr4en8+Hx+PJX/E/bw6UVZIAxLajKYeq
      xCOCuTkyRpjxUAs5I+h2WEKglCKXy62ZKEkphW3b+flINE3LLzMMI/961avM47C0tMTExAT/
      9t/+2/zntLS08I//8T/G6/U+s74kALHt+Ow4e5dv43WSjIWO8STQ5HZIQpDNZnn06BFTU1MY
      hsHBgwepra1ldHSUhw8fYts2ra2tVFRU0NHRweTkJPX19Rw+fJhMJkNXVxeHDx/OT4X7VSwv
      L7Nnzx7+zb/5N/kh9nVdlxvBxM6gKYc9qR5KMsPYmpeB6GtkjbDbYYldTinF4OAgo6OjHD9+
      HMMwiEQiKKX41a9+xenTpzFNk1/84hdcuXKFkZERmpqaGBwcpLKykvHxcZaXl1/YXXO9Kioq
      yGQy3Lt3L3/Sj8ViNDU1PbcdQBKA2Fa8dpLa+D0C9jITwYOMhk+6HZIQWJbF0NBQ/qarQCBA
      KBRidnYW0zTz4/N0d3fT3d1NKBSipqaGiYkJJicn6evr4/Lly2SzWfx+/1euBrJtm4aGBn75
      y1/mlzU3N9PQ0CAJQGx/JekhKpLdWJqH7qIrbocjdpnVOv5VmqZhmiaO4zA9Pc3CwgKTk5Ok
      02mOHz+OrusUFRXl1w+Hw/h8PsbGxrh58yaZTAbbtikvL+eXv/wlkUiE119//StPalVcXMy/
      +Bf/Ys0IoKZpSi8gsTPUJe7hdxLMe2uY90rPH7G1Vhtyn369KhQK0dTURH19Pb29vfT29tLU
      1IRt2/l1HMehqKiI+vp6JicnsSwLx3EYGRnh8OHD9PT0MDMz89IJIJfL8f777xOLxWhpaeE/
      /sf/yPj4OLqu89Zbb/Htb3/7ue+TMXPFtlGa6qcm0UlWD/Cw5C1SZtGXv0mIDWYYRv6xmgwM
      wyAWi+E4DpFIhLKyMnRdp7i4mMnJSbLZLJZlMTExQUlJCVVVVRw6dIhkMkldXR2pVIrGxkZK
      SkpIpVIvHVMikchXLdm2jcfj4U//9E/5l//yX/LRRx+98DOlBCC2BcPJ0LDchsdOMRNoYMFX
      IyN+ioJhGAb19fW0t7eTTqeZmZmhvLycoqIiysrK+NWvfoWmaYTD4f+/vTuNjeO8Dz/+ndn7
      5n3f1EFRF21SMnXblhJLhlUbjhvbcKIUcI02SYuiLdK+SV/0RQ8EbYHkRS8UBgrXSNMajh0n
      zWXYsmUrOihSIilRPCVeIsVjuQf33p3n/4J/bkhxKZOipF1SzwcQYM7O7v5mPDu/eW7y8vJQ
      FIWhoSGEEBQVFVFeXs7p06fx+Xxs3br1nuMQQmCxWHjqqaeorq4mGAwCLCqFLCQTgLQu5ERG
      KAp2IxSVMWs9fkN+ukOSpCRFUSgvL0dVVdxuNzU1NVRUVKDT6Th8+HDyZl9TU5MsNeTk5FBU
      VIROp6OpqYmBgQG2bt1Kbm7uqr/fYrGQnZ3NmTNn2Lx5M/v37ycYDPKTn/yEsrIyrNbU42Qy
      JgHMN1jM16kJIZL/5gdPzG/XNG3RNmlj02lRigPXsMcmcZsrGLHvQiipG7UkKV0MBgOVlZVU
      VFSgKEry/pSVlbWoIXhefv5vH2Lsdnty5a57ua8ZjUaeeeYZ3n77bf78z/8cp9OJ1+ulrKyM
      P/qjP1rUbrFQ2hOAEAK/309fXx/l5eXk5+cjhGBycpIbN24ghMDpdLJlyxZUVeXatWv4fD7s
      djt1dXXodDqGh4cpKirCbDYzNjZGIpGgrKws3Ycm3Sf22BS1vt+gACO2XfiNhekOSZJSWnjj
      X7htuX2/aJ/VfG9RURF/8id/wuDgIDMzM2RlZVFZWbnsIDDIgAQwMTHBpUuXGB8fR6fTJbPi
      mTNnKCkpweVy0dvbi16vR6/XJ0fLdXd3Yzabqaqq4sqVKzgcDqLRKOfPn6e+vj7NRyXdT+Wz
      lzEn/AR1LkZtO9MdjiRlLL1eT23tykfGpz0BZGdnc+jQIdrb2xdtD4fDVFRUkJOTw8TEBMFg
      kIGBAZqbmyktLcXpdHLx4kWqqqqAuW5QnZ2dZGdnU11dnYYjkR4Ea2yGTd7P0VC44dyL35CX
      7pAkKePEYjG8Xm+y6mdh9dLdpD0BGI1GjEbjkiHQW7Zs4Wc/+xm5ubl4PB5eeeUV2tvbyc7O
      RlEU8vLy8Pl8wFyyOH/+PDMzM3zlK19JFnk0TUPTtORnzg/iuLM+bOE+6aRp2qJBJncTS4gv
      3ukhuHNgzEr2XylFJNjsPYMpMYvPWMSIfTeaunRCq3uRSCRWHHc8Hr8vFzWLpQAAIABJREFU
      37l2qzzXGXJdx+NxYrHMuF43qlu3bvHmm2/y8ssv86Mf/Yjvfve7ydcURUlOOnentCeA5YyN
      jdHQ0IDD4eDmzZvcunVr0QHMNw7D3AGaTCZUVSUajS7aJ9UNZzU3oYdt5bFlyDGIB3c+7bEp
      CoPdgGDKUoPXWHz/PvwBxv2gCFYXc8Yc3TK/Q+n+sdvtCCH413/9V4aGhvibv/mb5GubN2/m
      q1/96vpZECaRSHDr1i1OnDiBwWBAVVX6+/txOBxMTU1htVqZmJhIrnJvMplobGykr6+PlpYW
      jhw5gtlsTg7WmDc/ReudJQBVXf3AiwdBVdWUU7amoiQy4+lOUZUVxwwrb+xSRZyy2StkRUYJ
      6V30OfeTuE9P/wA6vW7Fcesj9+1r10Rhdec6U65rvcGA0ZiRt5oNIzs7mz/+4z+mu7ubDz74
      gBdffDH5msPhyMypIIQQeL1ebt++zdjYGEajEafTSUlJCVarlfb2dpxOJz09PZSXl+NyuTh3
      7hyhUIiOjg4aGn47EZiqqjQ0NPDhhx9y7do1Hn/88TQembRWlpiHomA3OhLctmxhxlyR7pAk
      KWOpqkp+fj7Z2dlUVlbi8XgIh8NkZWUlxyekkva0HI1G8Xg85OXNNe75fD4KCws5evQoN27c
      IBgMJufM1uv1eDwexsbGqK2tpbKyEp1Ox44dO7BarVgsFvbt28fk5GSaj0paq8JQL/nhAWKK
      kd6sI+kOR5LWBSEEv/jFL5I1JT6fj/379/P0009nXhuAoigUFBRQUFCw5DWLxUJxcTGapi1q
      wGhoaCCRSKCqajKrLez2lJeXl0wm0vpkjM9SPtuGKuIMOfbgNRalOyRJWhcGBwcZGRnhW9/6
      FhaLhVu3bvGjH/2IPXv2JKvMF0p7CWA58wMq7iy6zE+/Km1cRaFuCoM9hHVOBpz77mvdvyRt
      ZKqqIoRIzjIajUbv2u4m76RSRjEkQpTPXkFBMG7diud+9vyRpA2uvLyc6upq3nzzTUwmE5FI
      hCNHjuBwOFLuLxOAlFHyQ/3khQaIq0YmLJuI6uVyj5K0UgaDgZdffpmRkREikQhOp5PS0tJl
      SwEyAUgZwxT3U+W/gCXhZdS2k2H7Y+kOSZLWHavVypYtW1a0r1wQRsoYrug4RcFuEoqBUdtO
      YjpLukOSpA1NlgCkjLHZewaTFmTaXMmobUe6w5GkdSccDvPmm2/S19eX3FZfX883vvGN9TMS
      WHr0OKK3KZu9goaOm45GIrp7WxRbkh5lAwMDXL9+nT/4gz9Ijv612+2ZORJYkgBULU7dzEco
      aEybqxiz1oMiayclabUKCwuTy1DO3/QNBoNsBJYyV05kcEHd/w4ChtUviSdJ0tzNfmhoiL//
      +79Pjpfatm0bX//612UVkJR5dFqECn8rtrgbj7GEIfvjaIq8LCXpXoyOjlJQUMB3vvOd5LZU
      0+3Pk780KX2EICtyi+LgdRQEw47dzBrlYu+SdK8KCwuJRqNMTU0lq4BsNhsOhyPz5gKSHnWC
      wlAvztgEUdVMr+tQugOSpHVNVVUcDgfvvfdeMgHU1NTw/PPPp5wRVCYAKW1s8RlqfL9BAAPO
      ZqKq7PkjSWtht9v59re/vWiVQ5PJJKuApMyiiDglgas4YlP4DPkMOPfBCheLkSQptWAwyIcf
      fkgwGATm1gquqKjgxIkTKZOA7GsnpYUt5qbSfwkNlRH7bmblYu+StGZ6vZ6ysjIqKyuprKzE
      4XDQ0dGx/P4PMTZJmiMEBaF+XNExgvosxi1b5ZTPknQfWCwWDh36bVua2+3m+9//PsFgcH2t
      ByBtXNa4m4rZSxi0MIOOJm7b6tIdkiRtCH6/n5/+9KfJKiC/349er5cDwaTMoDD39J8XuklU
      tTBs353ukCRpw9Dr9eTn5xMOhwEoLi5m27Zt2O2pp1WXCUB6qHRalBrfOQwiwpiljglL7Re/
      SZKkuxJC4Ha7icfjHD16lFAoxKVLlxBCUFlZKUsAUmYoDXRQEOolpHPS6zqIkKN+JWnNgsEg
      P/zhD9m+fTv79u3j7bffpqenB6vVyvXr13njjTdSjgOQvYCkh0bEo9R6f4MCTJsrmDZXpzsk
      SdoQotEosViMvLw8fD4f3d3d/N7v/R7f/OY36erqSrYJ3CljEoCmaSQSiSXbfD4fkUhk0bZA
      IEA8Hn/YIUprJCauYg6OElPNjFm3yymfJek+mW/o7e/v55NPPsFms1FTU5N8PWOrgCKRCL29
      vXz66accOnSInTt3IoTg9u3bnD59GkVRUBSFQ4cOYbfbee+995LvffbZZ3E4HHz44Yc0Nzfj
      dDr5/PPPMZlMNDc3p/GopDuJiJ/EwMeIiJ8p61ZG7TsQSuo5yiVJWh273c6xY8d46623iMfj
      fPOb38RisfDJJ5+wZ88erFZryvelPQH4fD78fj/V1dWLhi+3tbWxfft2duyYWxlK0zQ+/fRT
      tm3bRmNjI62trVy5coWDBw8Si8XQNI3+/n5mZmZ4+umn03U4UgpCaIjJLsTENRKKnpuOJkL6
      rHSHJUkbhqIo7Nixg7/9279FUZRkff/hw4fvuh5A2quA8vLyaG5uJicnZ9H24eFhYrEYn376
      KTdv3kRVVW7dusXmzZtRFIXa2lrGx8eBueTgdrtpa2tj586dOByOdByKtJxEFO3WZYj48BkL
      GbXtSndEkrQh6XS6RY29NpsNo3H5QZZpLwEsl5nGx8eZnp4mNzeXM2fOEAgESCQSyfksLBZL
      sq/r7Ows//d//0dBQQFlZWXJz4zFYovaFTRNIxgMLmkNT2RIe0I8Flu2seZOsYR4wNGsTCKh
      fXHM7j70Nz4BFLqznsqIxd6jkSjB4MrOYTicGdeHEGLF1wdkznUdDoUIio1R3SdEZvzulpNI
      JJidnV1Um6IoCmazGZPJtOR+m/YEsJyKigoOHjyIxWLB5XLR1dWFwWAgHA5js9nw+/3YbHON
      iE6nk6NHj3L+/HmuXbvGrl270Ol0GAyGRavgqKqK1WpdkgB0+hiQ/h+L3mBYtq7uTrGEBsw+
      2IBWQKdT7xqzSERJjF9A02IoWZW47VseYnTLM5qMWK0rS0TmRBQIPdiAVkBRlBVfH5A517XZ
      YsFqydhbzaos98CaKUKhED/4wQ8wm80AeDwebDYbRUVFPPfccxQUFCzaf01VQEIIxsfH6evr
      Ix6PE41G6e7uZnp6es2ZMi8vj/7+foQQhEIhTCYT5eXldHV1IYSgu7ubkpKS5P4mk4mmpiZ6
      enqYnp5e03dL94/wj6ENnwdVj1p1EMXsSndIkrRhzc7OEolEOH78OMePH2fz5s04HA48Hg8t
      LS1L9l9TWhZCcPnyZQYGBjh16hTRaJT333+fw4cP88QTT6zo/b29vZw/f56ZmRlUVeXmzZsc
      OXKEhoYGTp8+TWdnJ4lEgi996UvY7XZ+/OMf09fXh16v57nnngPAbDajqiqlpaVs3bqVlpYW
      nn322bUcmnQfiFgIrf8jiAZQsqtQSx6HYT2Q+ML3StJGIYRACJEsPSiKsmjb/N/z1lLKCIfD
      xONxqqurMRgMTE5O0t3dTX19PWNjY0v2X1MCUBSF/fv309zcjNVqxW638xd/8Rerev+WLVvY
      smVptUBWVhavvPIKgUAAu92eXN3m1VdfTZYI5tsDnnnmmeT7GhoaaGhoWMthSfeBEBrCO4yY
      uAaAWtKI4iqH4ak0RyZJD4bf72d4eBghBKqqUlhYSE5ODjMzMwwNDSGEoKamBofDwejoKNPT
      0xQUFFBcXEw8HmdsbIzi4uKUi7evVHl5OQUFBfzgBz8gPz+f3t5evvrVr3L79m1KS0uX7L/m
      EsD169f51a9+RUVFBc3NzVRVVd211Xk19Ho9LtfiKgNVVZN1/1IG0+JoE1cR/jGw5qFWHkh3
      RJL0QI2MjHDlyhWqq6tRVTXZs/GTTz4hJycHRVE4ffo0Bw4c4NKlS2RlZTE6OorD4WBiYoIb
      N25QVFS0phh0Oh2vv/46V65cIRgMsnfvXnbs2MHY2FjK3pFrLgFs27YNq9VKd3c3b775JtFo
      lFOnTrF79+6MbzCRHqCwD23oPCSiqPnbUBxru7AlKZNpmkY4HKaqqoo9e/agqiqKoiTHOZ08
      eRJFUXjvvffo6enB5XLx2GOPcenSJaanp2lvb+fJJ59Er9cvqi66lzg6OzsZGRlBURRmZmbw
      eDwcOHAg5Ypga26at1gsyZZlIQQtLS1MTk6u6SCk9S8xdBZmBsCaj7rtuXSHI0n3zcKu5fOD
      ruY7q9y8eROv10tlZSUVFRXMzMyQn5+fvPnm5uaiaRoej4e+vj5mZ2fp7e2ltLSUlpYWsrKy
      2LVrFyaT6Z5iGxgY4N/+7d84evRostp8YZfQO605AVy+fJlf/vKXGAwGSkpK+N3f/V22bt0q
      b/6PMBH2oA2cnuv5U9aIYs1Pd0iSdF8IIZb0sVdVFVVVqa+vp7i4GJ/PR1tbGx6Ph+Li4iWf
      kZOTg8vlYnR0FJfLhU6n49atW2RlZdHf309xcTFlZWX3FJ/ZbKa8vJxTp06t6B685gRQVFTE
      Cy+8QEFBAbm5uSmnHJUeLdrgb2D2NpizUUubQH9vTzOSlGkURUnZSKsoCllZWWRlZSGEwGAw
      MDQ0xObNm5mcnEzuNzMzQ21tLWVlZdTU1NDR0UFubi79/f0cP36cCxcu4Pf77zk+p9OJ1+vl
      v/7rv7BY5sa5FBcX88QTTzyYKqBAIMDHH3+8aHbOZ599Njllg/RoEUE32vA5QKCWPIaSXSOv
      A2nDi8fjXL58Gbvdjs1mY2hoiKysLHJzczEYDFy+fBmDwUAwGKSkpARFUZiamsLj8dDU1ERv
      by9Xr15lcnJy0Syeq6UoCk8++SShUIhQaG7w4sLZlO+0pgSgaRrnzp3D5/Oxd+/e5A/9zp47
      0qNBaBra2GWEZxD0ZpTi3Sim1EvRSdJGoqoq2dnZDAwMIITA5XKxc+fO5EzGV69eJZFIcOzY
      sWTdfDweZ9euXej1epqammhpaaG0tJS8vLxVf388Hsfr9WKxWHjyyScXVVMZjcbkd95pzb2A
      ioqKsNlsHD16VD7pPeoivrlRv7EgStFu1KKd6Y5Ikh4KVVWpra2luro6OWfZ/P2wtLQ02b1z
      4Y144ZN+fn4+zzzzzKKZPFfD7/fz7rvvsnv3bt599128Xm/ytR07dvDGG2+k7J6/5gRgtVr5
      3//9Xy5cuJA84Ndeey2Z/aRHh3a7AzF2GVQDuvrnUfTmdIckSQ/VfIPwQoqipKx/X3h/VBRl
      2af0lXC5XLz22msYDAZ27lz84KWq6rKDy9ZcBdTf309DQwNPPfVUcvu9tmBL65eIR9C6fwYI
      lOIGlJxN6Q5Jkh4Z8xNdxuNxWlpamJiYSL5WVFREc3NzygSz5hJARUUFExMT1NTUJDNfqmwn
      bWzCO4zwDIPOiFrRDPr7MxpckqSVGx4e5r//+7+Tg9Fgbn6g5SbnXPOdOhKJ8P777/OLX/wi
      ue1b3/oWe/bsWetHS+uEiPhJdPwPaHGU4t2o+XUoiuwOLEkPm6Io5OTk8OqrryYTQKpqqXlr
      LgEcPXqUQ4cOLdp+r6PYpHVIaIipHoRvBAwW1PJmFJsc+CVJ6ZCfn8/09DQ/+9nPkmsC5Ofn
      8/jjj9/fKqBIJMLHH3/MU089xcjICOfOnSMajeJwODh27Bj5+fIm8CgQsRDaaAsE3Si5m+YG
      fkmSlBaapnHo0CE8Hk+ykdloNN7/KqCenh7OnTvHl7/8ZXp7exkaGmLHjh1cvHiR8vJy8vLy
      ZC+gR4DZP4jmvgpCoNv8DIrZme6QJOmRZbPZeOaZZ4jFYsltD2QcgM/nw+l0oqoq+fn5PPnk
      kxw6dAi/34/H45GTwT0i8nwdMDsOjmKUsr3pDkeSHmkzMzN873vfQ9O05P1327ZtfO1rX0vZ
      FfSeE0BxcTFDQ0NMTU3R2NiIEIKZmRkGBwepra2VN/9HgCU+Q5X/IugM6GqPgip7f0lSOk1M
      TBCPx/nTP/3TZMPvwsWz7nTPv9iKigoaGxv5q7/6K5qamjCbzbS2tpKXl0ddXd29fqy0XgiN
      Td6zmBKz4CpHKdqFot77QBZJktauvLwco9GIzWZLdsa52wCze04Aer2e1157jYaGBi5fvkw4
      HOYrX/kKjY2NshfQIyAnMkyF/xKK3oSu6jCKc+lyc5IkPVyRSARN0/jrv/7r5I1/27ZtnDp1
      6v5PBaGqKjt37lwy9Fja2BSRoDjQhS0+Q9xRgr6gDkV37+uYSpJ0f7hcLv7sz/5s0aI1ZrP5
      /lcBSY8oIXBEJyifvYJOxPHZqrBkV6c7KkmSmJue//333ycQCCS3VVVV8dxzz6UcDJYxCWC+
      n+qdjcd3bhdCkEgk7jq6TXqQBCWBa2RHR4gpRq7nHOOgTk77IEmZwGg0sn37dqLRKDC3UH1/
      f/+ynXLSngCEEHg8Hq5du0ZNTc2iJdQ0TaOjo4NYLEZTUxOaptHa2orP58Nut9PQ0IBOp6O/
      v5/y8nIsFgtDQ0MkEgmqq+VT6YNg1EJs8n0GwLC9Ab+xIM0RSZI0z2KxcODAgeTfbreb733v
      e4RCIRwOx5L9054AxsbGuHjxIh6PB7vdvigBjIyM0NfXh9vtpqmpif7+foaHh9m9ezft7e04
      HA5qa2vp6uoiNzeXSCRCS0sLu3fvTuMRbWwVs204YlOEdA5uOJ9IdziSJC3g9Xp55513CAaD
      yb/nSwOppD0BFBYWcuLECVpbW5PbhBAEg0GuXr3Krl27OHPmDABtbW0cOXKEgoICrFYrZ86c
      oba2Fphr/b569SpFRUVUVVWl41A2PHPcxybPGQQwYt+N21xBTrqDkiQpyWAwsGnTpuRNX1EU
      6urqsNlsKfdPewLQ6XTodLoldVS9vb1YLBZKSkqS28LhMHa7HUVRcLlcyYaOUCjEZ599RigU
      4qWXXkp2f0okEouWRhNCEI1Gl7QdLNwnnbRE4q7ZeqFYIvXcHg+KIhKUBK5ijXsI6bMYtW0n
      rprRNLHimIFl5yR52BLxVZzrBetdp5Ngdec6U67reCxGVJcZsaxVply/qcTjccbHx3G5XFRW
      VpKdnc309DSXLl2ioKDg/ncDfVDC4TDnz5/n8OHDeDwewuEwXq930ckXQiRv5DqdjoKCAgYH
      BwkEAslspyjKksSiquqSbRkzZjlFvMt52O3fpkSAkkAnRi3IqKWWCcsWABRlacP93WXG2U51
      bdxt30ygsLpYMiPq1Z3rTJepxyGEoKWlhffeew+LxYLL5eLkyZP8z//8D6WlpQ9mTeAHxe/3
      43K5uH79OpqmMTExQXd3N3a7nbGxMWpraxkdHSU7OxuYa/mur6/Hbrdz4cIFnn76aaxW65Ke
      QvNLsy1Zsi1DehPdbem2JRIP8YlKaBQHuygM9ZJQDPRkHSGhzj1NKIqy8piZSxiZQNWt/Fzr
      dZny1LfKc50h17VOr8dgyMhbzYYRDAZpa2vj6aefprGxkbfffpvvfve7nDhxgpdffvnBrAew
      VkIIpqenGRkZYXBwEIPBgNFopLq6mldeeQWAWCyG1+tl7969FBUV8fnnn+P3++np6Vm06Iyq
      qmzfvp3bt2/T0dHBE0/IBsr7xagF///Tf4gxax23rVvTHZIkSQskEgkSiQQ5OTnY7XZyc3PZ
      s2cPL7744l1XaEx7WlYUBVVV2bRpU/K/F9LpdBw+fBiYW2u4oaEBr9fLjh07KC8vR1VVHn/8
      cex2OyaTiX379jEzM5OOQ9mwHNFJioLdxBUjPVlH0h2OJEl3EELgdrt58803ycrKYnh4GFVV
      +bu/+zu2bt3Kq6++en9nA70fFEUhNzeX3NzcZfeZTw7z/11XV4emaYvq8svLy5P7Z2dnJ6uG
      pLVTRIJN3rMYtBBT5ho8xpIvfpMkSQ+VzWbja1/7WsqHX6fTub7aAO5GUZS7zm4n3V/5oX6K
      g9eIqRZ6sw4RNMiOn5KUafR6PTU1Nat+X2a0EkkZSa+FqZhtw5QI4DaV4zZVpDskSZLuo3VX
      ApAeEiHIDo9QHOhCKApjtnr8hrx0RyVJUgqapiVH/95Jp9NhNptTdmGVCUBKSSdilAXascen
      mTGWMmR/DBRZYJSkTDQ9PZ2c8+dO27dv5/XXX18/A8Gk9LPGZ6j2XQBgzLZN1v1LUgbLycnh
      L//yL1OOVDYajcuOH5EJQFpKCKr8LZi0AAF9Njcde774PZIkpY1OpyMvLw8hBJ2dnfzmN79J
      ThtSVVXF8ePHU44HkGV6aQln9Da13s/R0NHv3IffkJ/ukCRJWoHJyUn+6Z/+iampKcLhMFar
      lRs3biy7v0wA0iKqiFPtP48xEcRnLGDMVo+myuUeJWk9cLvdVFdX8+Uvf5nNmzdz8uRJfD4f
      kUgk5f6yCkhaxBz3kRseREVj2lyFxyQHfknSelFYWIjX6yUrK4uPP/6YwcFBPB7PsjPDygQg
      JalanGrfeQpCfYT0Tq5lfwlNkU//krReuFwuvvOd75CXl8eLL75Ie3s7x48fx263p9xfVgFJ
      SZa4h6JQNwqCcWsds0ZZ9y9J64nP56OlpQW9Xk9tbS3Hjx+nq6srZfdQkAlAWiA/3E9u6CYx
      1USv61C6w5EkaYWEEMTjcaanpzl//jyhUIhgMEhPTw8ff/wxsVgs5ftkFZAEgCXmocZ3HhWN
      fsdevMaidIckSdIqnDlzhv/4j/9gYmKCb33rW8Bc99Dnn38+5YLwIBOA9P8VhPrIDQ8S0dm4
      ZdtBQjWlOyRJklbh4MGDbNmyhU8++YQXXngBmFsj+G6LCMkEIGFMBCgLtKOKOOPWnbhN5V/8
      JkmSMsb8ynzFxcU0NTXx1ltv4fF4qKmp4cSJE7IRWFqGEBQGe8gP9RFTzYxZ64noUxcXJUn6
      YkKI5L/5vzVNQ9O0JdsW/r3wPfdqdnaWf//3fycnJ4dDhw4xMTHBf/7nfxKPx1PuLxPAI86U
      mKVy9hKWhJ8pSw0j9l3pDkmS1rWxsTGuXr2avOm63W7a2tpobW3F6/WiaRpDQ0O0tbUxOjqa
      bMAdHBxc9ka9UkNDQ+Tm5vLSSy+xf/9+XnvtNW7fvo3P50u5v6wCesQ5YpMUBruJKSZGbLuI
      q+Z0hyRJ61YgEOCTTz4hGAxSWVmJwWDg9OnTFBQUoKoqp0+f5uDBg7S1tZGTk0N7eztOp5OJ
      iQlu3rxJaWnpmr6/sLCQqakpfv3rX1NYWEhHRwcOhwObzZZyf1kCeJQJQf3MrzFqYWbMZYza
      dqQ7IklatxKJBK2trVRVVSXr3L1eL8FgkH379tHc3IymaXR3d+Nyudi9ezcmk4np6Wk6Ojpo
      bGxEVdV7qgYSQpBIJMjNzeXUqVO0tbXxzjvvEAgE+PrXv55yKmiQJYBHmjnhpyh4nYSiZ8j+
      OFGdNd0hSVLGW1hNo6pq8qY9PDxMIBCgubmZoaEhADweD3l5ecmZOHNychBC4PF46OnpIRAI
      0NfXR2lpKRcuXCArK4uGhgZMptX1wotEIrS3t1NRUcHu3bvZvXv3it4nSwCPKiHICw2gigRu
      Uznj1q0IRa61LEl3s7CxdmGjbSwW48qVK7hcLqLRKOFwmNnZ2UUNvfNycnLYsmULHo+HrKws
      LBYLo6OjWCwWbty4weTk5KrjikQiXLhwgbGxsVW9L2NKAPMnaeGyZQtP3Pz2VNuk1dOLCNX+
      iyQUPbdsO5iVyz1K0hea7255p0QiweTkJIFAgKGhIYaHh7l8+TK7du1icnIyed9yu93U1tZS
      VlZGVVUV7e3t5Ofn09/fz/Hjx7l48SJ+v/+eYpuZmeGtt97i5z//+aLttbW1vPjiiynjTnsC
      EEIQDocZHx8nJycHl8uFEAKfz8fU1BShUAi73U5paSk6nY6RkRH8fn9ym6qqTE9Pk5WVhcFg
      SM58l5MjV7C6m/xQP2WBdmaMJdxw7pVP/5K0BhaLhd///d8H5qqI3n33XQ4ePIjD4cBkMtHW
      1oZeryccDlNSUoKiKExOTuLz+dizZw+9vb10dHQwOTlJbW3tPcVgNpvZtm0bVVVVi7bn5eWh
      qqkre9KeAGZmZrhy5Qq9vb088cQTybqrjo4OgsEgZrOZzs5OHnvsMex2O2fPnqW0tJTOzk72
      7t1LaWkpZ8+e5eDBg5jNZj777DMqKytlArgLnRZlq+cTAIYcjYT0WWmOSJI2DlVV2b59e7Lh
      9dChQ3R1dZFIJDh27Bg63dzDlhCCXbt2odfraWpqorW1lfLycvLyVl8aVxQFu93O3r17V1z/
      DxmQAEwmE1u2bFmSoerr63E4HBgMBs6fP8/ExAS9vb00NjayadMm+vr6uHr1arLblKZpdHV1
      odfr2bx5czoOZd0oCnaTEx4kqlrod+5LdziStKHMJ4B5JSUlFBYWoijKovvcwif1vLw8jh07
      tmSflbJarfzO7/wOLpdrVe9LewKwWq1YrVZGRkaS2xRFIScnh2g0SldXF9evX+fkyZP89Kc/
      TRaf5p/8AaLRKB0dHQwODvLCCy8kW9DvbICZ7yp1Z6PMWkff3S/z8a1EInFvMZvifmp9ZzFq
      QW7ZdhDRpe4fvFKriTmTaJq28nO9zGIaD9/qznWmXNdaIkEi8ei21ymKknI93oVtmIqiJEsG
      90Kn01FSMrd4kxBixe2jaU8AywUaiURobW1lcHCQ48ePL6nSURQleYHH43EmJycxGAyoqrqo
      wXjhD2Z+xN2d3yky5Aeuadqy07beKX4vIQuNglAfeaEbJBQjg45GUNbWEUwIseKY5/fPBFpi
      5ec6UxKcEKzuXGfIdR1PJIjFMuP/+1plyvV7J5/Px7Vr16ivr6ezs5MDBw6s6H1pTwCpCCHo
      7u5mfHycY8eOkZubC8w1tPh8Pmw2GzMzM8nBFlarlebmZjo7O2lra+PAgQMYDAZ0Ot2irKqq
      KiaTaUkRS9VFgJX/sB4UnU6H2byykbixxOp/3AYtTMVsKyYtwJSosFoBAAALNUlEQVSp6r4M
      /FJVdcUxAyjK7Jq/837QG/QrjtsYiz7gaFZGUZRVnetMua6NRiNmc0bealYtU3seer1efvKT
      n2A2m/nVr37F3r17k6/Nly5SxZ7W/yvzPYBmZ2fx+/1EIhHcbjdOp5Nr165RV1eX7F5ls9nY
      vn0758+fZ//+/bS0tLB169bkZ+n1evbs2cOvf/1r+vv7qaurS+ORZab80ABls+0k0NGVc1RO
      +yBJG0ROTg7l5eX8wz/8A7dv3+aNN95IvrZ7926+/e1vpxwNnPa0PDU1RWdnJ9FolEAgkOzx
      Y7PZGBwcZHh4GFVV2bp1K1u3bmVycpKzZ8/icrmSjcfV1dWYzWZsNhvNzc2Mjo6m+7AyjqrF
      2OH+BSoaY9Y6Ji2b0h2SJEn3id1u5w//8A95/vnn+eijj3j++eeTr+n1+mXXBEhrAlAUhfLy
      csrLl84/f/LkyZTvOXToEPF4HL1en6zK2bXrtzNYlpaWrnlCpY2oLNCOMzpOVDUzaG8kqspp
      HyRpI1FVlaKiIg4fPszPf/5zZmZmqKmp4ciRI8tWXa27qSBUVcVoNN5TV6lHlTE+S5WvBZ2I
      c8u2g3FbHWKNjb+SJGWecDjMv/zLv+D3+6msrKS1tZW33npr2Y4Maa8Ckh4sRSQoD1yhINRH
      WGdjyP6YHPglSRvUzZs3cTgcvP766yiKwr59+/jHf/xHvF5vysGxMgFscKZEgAp/KwYRZsxS
      x4Ss+5ekDSs3N5fp6WnOnz9PUVERly9fxmKxYLFYUu4vE8AGVxjqJj/UT1hn46ajiZic8lmS
      NqyCggJeeuklPvjgA/x+P+Xl5bz22mvLdh+WCWAD02shtrk/QkEwZq3ntnXrF79JkqR1S1VV
      9u/fz/79+1e2/wOOR0qjstkOnLFxwnoHQ45G4srqFpmQJGljkyWADcoc91Llv4giBGPWbUyZ
      KyFDRzFKknT/CCGYnp6mq6sLo9FIQ0MDRqMxZVdQWQLYgBSRoGy2g7zwTUJ6B8P2BqI6e7rD
      kiTpAUkkEgQCARKJBB6Ph+9///v09fXR2trKP//zPxOJRFK+TyaADcgem6IscBmDFmbSUsuE
      RU6PLUkbWSwW49y5c5w9e5ZQKISqquzcuZPt27cTi8WWnURQJoANqDjQRX5ogKhqoSv7SyTU
      pXOASJK0cRiNRurr65mdneWXv/wlzc3NtLS00NPTw8mTJ7HZUk/7LtsANhhbdIpa31lUEWfY
      3oDPUJDukCRJesDm11DZtWsXxcXFXLlyhfr6eurq6sjPz192KgiZADYQVYtREryGMzpOWO+k
      z3UATU09CZQkSRtHLBbj7NmzXL16FUVRyM7OJhgM8vHHH1NdXU1jY2PKBWdkFdAGYo3PUOFv
      BRRGbTvxGkvSHZIkSQ9BIBCgt7eX/fv389xzzxEIBCgrK0uOB5BzAW1wOi1Ktf8iOZEh/IZ8
      +lwHiOlSD/+WJGljsdlsFBcX8/7772MwGMjNzaW8vByn00lpaamsAtrQhMARm6A40IVexBi1
      78RjKkt3VJIkPSRGo5ETJ07Q2NhIJBKhtLQ0uQDM3VYxkwlggygKXCc7MkJUNdPrOpjucCRJ
      esj0en1yYfiVkm0AG4A1PsMW76coaPQ5DxDUZ6c7JEmS1gGZANY5VcSp8l/EFp/Bb8hn0NkE
      crEXSZJWQN4p1jlrzE2VvwUNlVH7Tvyy378kSSskE8A6ptOibPJ+jiM6yawhjyF7gxz1K0nS
      iskEsI5lRUYpCVxFIcGg43Hc5qp0hyRJ0jqSMQlA0zQ0TVu0LRaLEQ6HEUIs2i8UCi07sOFR
      oYgEVf6LuGK3iakWerMOpzskSZLWmbR3A9U0jZGREU6fPk1zczNbtmxBCMGtW7c4ffo0sViM
      mpoaDh48SDwe54MPPmB2dhabzcbx48cxmUycPXuWhoYGnE4nbW1tJBIJ9uzZk+5De6DU0DTV
      vgsIoDvrCBGdI90hSZK0zqS9BDA+Ps7169fJysoiFAolt587d44nnniCb3zjG0xPT9Pf38+F
      CxcoKiri1KlTlJSU0NbWhhACj8dDLBbj5s2bDAwMsGnTxl74XGhxtGvvYRARfMZChhyN6Q5J
      kqR1KO0JoLi4mGPHjlFYWLhou9vtprKyEkVR2Lx5M7du3WJoaIj6+noURaGuro6RkRFgbgUc
      r9dLW1sb9fX1uFyudBzKQyPcA2jjV4grBm469jJryE13SJIkrUNprwJSFCXlUOVEIoHBMDeT
      pdVqZXR0lHg8nhzebLPZkiUGv9/P+++/T2FhIZs2bUJV5/JaPB4nHo8nP1PTNILBYPL15Hct
      2Ced4rEYwWDw7jslYqgDZ1BDM/gNRYzadqAp6ZvxU0toXxzzwv018cU7PQTRSJRgcGWxhCOZ
      0d4khFjVuc6U6zocChEUS2eiXI8WtkduBGlPAMvR6XTE43H0ej2hUAiz2Yxer0+ubBMMBrFY
      5iY7czqdPPXUU3z++ef09fVRV1eHqqrodLpFU6CqqorVal2ScHT6GJD+H4veYEge03LExADx
      sVY0ATede/Eaix9SdKmpOvULY160v7ryG9iDZDQZsVjMK9rXnIgB6Y9bUZRVnetMua7NFjMW
      c8bealblbvPqrEdprwJajsvlYnR0FCEEN27coKCggOLiYnp7exFC0N/fv6jayGw209TUxLVr
      15iZmQF+W7q4s5Sx3PZMcGdsi+LUYmgjFyA4iWbJ5aZjT0Ys9H63mNfruV7vMWdW3CuPOdP/
      bTRpTctCCAYGBmhpaWF8fBydTsfo6CgHDhygvr6ejz76CJPJhMlkorq6muLiYn784x/T399P
      KBTi2WefBX77o6isrGR8fJwLFy5w4sSJdB7aAyECU2g3PwNAqX6ScMyZ5ogkSVrP0l4uq6qq
      oqysLFm3pqoqer2e+vp6KisriUajOJ1O9Ho9JpOJV199lUAggMViSRaHT5w4gV6vR1EUmpub
      l4wn2AiEliBx5YcQnYWsSnRVB6E33VFJkrSepTUBKIqypJ5+IYdjad92s9mM2by47na+sRi4
      6+etZ2KqBzF1HXQG1MoDaJZcYCbdYUmStI5lbBuA9FsiEUUb/Awisyi5m1BLHkPRpb3wJknS
      OifvIhlOCIG43Yk2emnu6b/iAIqrHDZeLZckrVtCCEKhEH6/n0gkgs1mw+VyodfrCYfDuN1u
      FEUhJycHo9HI7Owsfr8fp9OJzWZD0zQCgQA2m+2h1mDIBJDpYiESN89AyI2Svw21tAlFUZEZ
      QJIyh6ZpdHd3Mzg4iMViYXp6ml27drF9+3ZOnz5NIBBACEF2djZ79uzhww8/RAiB2Wzmqaee
      wu12097eztNPPy0TgPRbwjuIuNUGehNq+V4Ua066Q5Ik6Q6qqrJt2zZ27dqFqqq0tbVx+/Zt
      qqurGR8f55VXXkGn0/HOO+/Q09ODy+WisbGRlpYW3G43V65cobGxcUn75oMmE0AGE1qCRPcv
      IBZEya9DLdub7pAk6ZF352jg+W7oer2e27dvc+PGDfr6+jh27BgzMzPk5uYmb+wFBQUEAgFC
      oRA+n49oNEpfXx+5ubmMjo4SDAaprKx8aKUAmQAymLjdiRi/AkYH6qYvgUU+/UtSOgkhiEaj
      yb9VVU32QoxEIvT19dHf309eXh6qqhIOhxf1UjQYDOTk5KCqKmfOnCEvLw+AqakpotEonZ2d
      WCwWiosfzgh/2QsoQ4loYK7uPx6Z6/mTtwVF3XjdWyVpPVEUJTk41WQyLbq522w2Dh8+zKlT
      pygsLKSzsxOr1Yrb7U7u4/V6cTgcHDhwgJMnT5Kbm0thYSFut5tnnnmGiooKfD7fQzue/wc8
      IJv6j1dQkQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='328' name='PieChart' width='328'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
      4GzuPTfdT62qRW5fycDgRfu2kvtnM4Gy2WyJ2mihUKCpoYHNMT/G1PiCWjHFx0uMR2v46Wuv
      f/wz6/KxCIVCyIU8liOf31ld7tSUmktLNERba+v1OlQXl08sMtYlcTfnjtzZcEPcZmfpLIDI
      w5ZlmWw2C1zq5SssBfG3M43PGcyTZRmPxzO/22h8hIDPy9TUFKlUyu7qZJomw8PDpNNpPB6P
      7f8Xr53L5bj/7k+xMjeO2deNZJkLuwdUlWNpkxdeetmtD7jBeOXSXtKC96tCN/u7+eKn78bj
      xnFcXK6ILIq9xGQsUuucZfbOyfv96gaE+0VM6M6iHKdqoygEE1bD3AYec5EkicLoEGVjA6xb
      t45IJEIsFiMSiZDJZEilUvau0FkdCtiFP5Zl8fRjj3LfkioKZ47N+xnsxiPhcn45bfKX//BN
      hkdGPu45dvkIKIqCqmlIEgtakpe581JJbq2JlfSTcHFxWRjZtC750kUxlfO3s+p3vmrh+RCT
      sNAQcnYMcy4IcElueiFpCfvYYhUUPD67sYzoCSDLMtFolHg8TjQaJZVKkUwmbQshmUwyMTFB
      JpMhm82yacN6vJiXWTLO4LGiKMiRGMnGDn72+tuuZMQNwOfz8cC6FciJcXujAJfUZ539IMT/
      Zi5LU31dSXaQi4vLwsiqsvCk/mGzKMRgdKp5ApelVc7d0TkbySzk2zUHenjmgfsu6zsQDAbt
      CUDXdUKhEENDQ0QiEcrKygiHw0QiEUzTZHp6mnPnzqOrxb6xzjiEWJhKVEQl8Pm87mRyg1jS
      1IScmCiRdnBWfYvvRVh8ZiTGjw6eYNKV/XZx+UBclgbqZKFevwsxt9rXeftcFsriWaijmFK/
      hF+8vWted5GiKGQyGft9VqxYYccHhBvK7/fj8Xp5Y/9BrGix2Ms52c/Xh9hCYizpSkTcKAKB
      AB7LBKwFg/dQqiyrV9Rx6OgxDMPgzNmz/PW3vs/OPXsWvN5cXH6dmbcjmJg4P0hBlAgMi8Ks
      +e6fb0FYSGROTNhOJElCUlUGZjJkc7mS+1RVZWJigmg0ysTEBJIk2bo+czOFvB4PWVlBilWU
      7B4ty8Lr9V7ugpJlRgyZkdHRK54Hl2tDVTgIs3Upc10/TrFCuybA5+f0xRF0Xae7t4/BshoG
      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
      +PsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='248' name='TextTable' width='288'>
      iVBORw0KGgoAAAANSUhEUgAAASAAAAD4CAYAAABMmTt2AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2debiN5frHP5KSEzql0kCFRiVEk7niNGgwVBLpnBOu5tBISIOonAYlQkpJ
      g0ooaVDJiYxXhqJQKnJKIjqGk5/fH67vflrv3stee+DZ9P38s/Ze7/S8a73rfr7Pfd/Pcxfb
      smXLFowxJgK7xW6AMebPiw2QMSYaNkDGmGjYABljomEDZIyJhg2QMSYaNkDGmGjYABljomED
      ZIyJhg2QMSYaNkDGmGjYABljomEDZIyJhg2QMSYaNkDGmGjYABljomEDZIyJhg2QMSYaNkDG
      mGjYABljomEDZIyJhg2QMSYaNkDGmGjYABljomEDZIyJhg2QMSYaNkDGmGjYABljomEDZIyJ
      hg2QMSYaNkDGmGjYABljomEDZIyJhg2QMSYaNkDGmGjYABljomEDZIyJhg2QMSYaNkDGmGjY
      ABljomEDZIyJhg2QMSYaNkDGmGjYABljomEDZIyJhg2QMSYaNkDGmGjYABljomEDZIyJhg2Q
      MSYaNkDGmGjYABljomEDZIyJhg2QMSYaNkDGmGjsXtATzJgxozDaYYz5E2IFZIyJRrEtW7Zs
      id0IY8yfEysgY0w0bICMMdGwATLGRMMGyBgTDRsgY0w0bICMMdGwATLGRKPAmdDG7Ir897//
      BWDVqlUA/PWvfwXgL3/5S67H/v777wD83//9HwB77LFHRtf88ccfAShRokTKNQuLjRs3AlC8
      eHEAdt8955+/2v39999ntaN06dJ5utZvv/0G5P55WQEZY6JRZBTQPffcA8APP/wAwIABA2I2
      x/zJkDro1KkTAP/5z38AOOSQQ4CgBo4//ngAevbsmaUkpBjGjRsHwKBBgwBo164dAJdcckmO
      19ywYQMAt956KxBUw/r16wE45phjALjzzjsB2G23/OmF2bNnA3DttdemtKtjx44p+82dOxeA
      Xr16AVCxYkUAvvnmGxo0aADAjTfemOM15s+fD8ATTzwBwP/+9z8ABg8evM22WQEZY6JRZBSQ
      p6SZmBQrVgwIquDEE09M2S6Vc9NNNwEwefLkLFVw8803A3DwwQcD0KhRo4yu+eKLLwJQoUIF
      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
      icb/AyRNBdGe5ubdAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='WaterFall' width='384'>
      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
      cV0EwP79+5mcnOT++++nqqqq0MCHQiHi8TiRSIRMJkM6naampoZgMMjU1BS2bZPP55mamir0
      FPx+PytXrmTRokW8+uqr1NXVUV1dDVAIiVmmeSH9vV7vJ7i3Ipfndpf2n6vX48Xl0tl015OS
      ObSdHW6ZPaKf/W/Lsjh48CAPPPAAlZWVc963YsUKurq6sCyL0dFRxsfHicViLFmyhPfee490
      Os3U1BQ9PT20tLTM2d6SJUtYvXo1O3bsIJfLLcQui4gsqJI5pHj33XfZs2cP2WyWVCrF2bNn
      WbNmDcuXLyebzfLjH/+48N6WlhbuuusuOjs7OXv2LP/1X/+Fx+PhtttuIxqNUldXR19fHz/6
      0Y8AWLt2LS0tLWQyGcrKyvB4PHg8Hjo6OtizZw/Hjx+no6NjgfZcRGRhGPbsIfd1yrZtEokE
      Xq+XQCAwZ9n09DQej4dgMHhV6zZNE9M050wUiyyUvcfO8u1f7lvoalzRb/7j8xoCuo4YhmGU
      TA/gahmGQXl5+WWXXalcRERKaA5AREQ+WQoAERGHUgCIiDiUAkBExKEUACIiDqUAEBFxKAWA
      iIhDKQBERBxKASAi4lAKABERh1IAiIg4lAJARMShFAAiIg6lABARcSgFgIiIQykAREQcSgEg
      IuJQCgAREYdSAIiIOJQCQETEoRQAIiIOpQAQEXEoBYCIiEMpAEREHEoBICLiUAoAERGHUgCI
      iDiUAkBExKE8C12BD7NtGwDDMC5b/uFlVyr/qHWJiEgJBYBt25imydTUFLZtU1VVhcvlKiyb
      mZkhmUxSXl5OMBgslE9MTDA5OYnX66W6uppAIADA9PQ08Xgct9tNVVUVoVAI27ZJJBKEQiE8
      Hg+maZJIJAgGg/h8vgXbdxGRhVAyAZDL5Thx4gTHjh3D6/XyxBNP4Pf7ATh37hzHjx+np6eH
      LVu2sGLFCgDGxsZ44YUXCIVCZLNZmpqa2LhxI6lUiu3btwOQz+eprKxk8+bNGIbB9u3buf32
      24nFYvT29nLgwAHuvvtuGhsbF2zfRUQWQskEQDab5fz58yxbtoyxsbE5y86dO0dNTc2c4R6A
      gwcPsnTpUu644w5GRkbo6uqiv7+f/v5+ampquPPOO0mn07z22mt0d3ezdOlSbNvGtm2mp6c5
      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
      XW63fley4P4/ILHQSN/DL10AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
